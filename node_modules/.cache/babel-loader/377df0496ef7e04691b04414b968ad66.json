{"ast":null,"code":"/*!\n * URI.js - Mutating URLs\n *\n * Version: 1.19.10\n *\n * Author: Rodney Rehm\n * Web: http://medialize.github.io/URI.js/\n *\n * Licensed under\n *   MIT License http://www.opensource.org/licenses/mit-license\n *\n */\n(function (root, factory) {\n  'use strict'; // https://github.com/umdjs/umd/blob/master/returnExports.js\n\n  if (typeof module === 'object' && module.exports) {\n    // Node\n    module.exports = factory(require('./punycode'), require('./IPv6'), require('./SecondLevelDomains'));\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['./punycode', './IPv6', './SecondLevelDomains'], factory);\n  } else {\n    // Browser globals (root is window)\n    root.URI = factory(root.punycode, root.IPv6, root.SecondLevelDomains, root);\n  }\n})(this, function (punycode, IPv6, SLD, root) {\n  'use strict';\n  /*global location, escape, unescape */\n  // FIXME: v2.0.0 renamce non-camelCase properties to uppercase\n\n  /*jshint camelcase: false */\n  // save current URI variable, if any\n\n  var _URI = root && root.URI;\n\n  function URI(url, base) {\n    var _urlSupplied = arguments.length >= 1;\n\n    var _baseSupplied = arguments.length >= 2; // Allow instantiation without the 'new' keyword\n\n\n    if (!(this instanceof URI)) {\n      if (_urlSupplied) {\n        if (_baseSupplied) {\n          return new URI(url, base);\n        }\n\n        return new URI(url);\n      }\n\n      return new URI();\n    }\n\n    if (url === undefined) {\n      if (_urlSupplied) {\n        throw new TypeError('undefined is not a valid argument for URI');\n      }\n\n      if (typeof location !== 'undefined') {\n        url = location.href + '';\n      } else {\n        url = '';\n      }\n    }\n\n    if (url === null) {\n      if (_urlSupplied) {\n        throw new TypeError('null is not a valid argument for URI');\n      }\n    }\n\n    this.href(url); // resolve to base according to http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#constructor\n\n    if (base !== undefined) {\n      return this.absoluteTo(base);\n    }\n\n    return this;\n  }\n\n  function isInteger(value) {\n    return /^[0-9]+$/.test(value);\n  }\n\n  URI.version = '1.19.10';\n  var p = URI.prototype;\n  var hasOwn = Object.prototype.hasOwnProperty;\n\n  function escapeRegEx(string) {\n    // https://github.com/medialize/URI.js/commit/85ac21783c11f8ccab06106dba9735a31a86924d#commitcomment-821963\n    return string.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n  }\n\n  function getType(value) {\n    // IE8 doesn't return [Object Undefined] but [Object Object] for undefined value\n    if (value === undefined) {\n      return 'Undefined';\n    }\n\n    return String(Object.prototype.toString.call(value)).slice(8, -1);\n  }\n\n  function isArray(obj) {\n    return getType(obj) === 'Array';\n  }\n\n  function filterArrayValues(data, value) {\n    var lookup = {};\n    var i, length;\n\n    if (getType(value) === 'RegExp') {\n      lookup = null;\n    } else if (isArray(value)) {\n      for (i = 0, length = value.length; i < length; i++) {\n        lookup[value[i]] = true;\n      }\n    } else {\n      lookup[value] = true;\n    }\n\n    for (i = 0, length = data.length; i < length; i++) {\n      /*jshint laxbreak: true */\n      var _match = lookup && lookup[data[i]] !== undefined || !lookup && value.test(data[i]);\n      /*jshint laxbreak: false */\n\n\n      if (_match) {\n        data.splice(i, 1);\n        length--;\n        i--;\n      }\n    }\n\n    return data;\n  }\n\n  function arrayContains(list, value) {\n    var i, length; // value may be string, number, array, regexp\n\n    if (isArray(value)) {\n      // Note: this can be optimized to O(n) (instead of current O(m * n))\n      for (i = 0, length = value.length; i < length; i++) {\n        if (!arrayContains(list, value[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    var _type = getType(value);\n\n    for (i = 0, length = list.length; i < length; i++) {\n      if (_type === 'RegExp') {\n        if (typeof list[i] === 'string' && list[i].match(value)) {\n          return true;\n        }\n      } else if (list[i] === value) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function arraysEqual(one, two) {\n    if (!isArray(one) || !isArray(two)) {\n      return false;\n    } // arrays can't be equal if they have different amount of content\n\n\n    if (one.length !== two.length) {\n      return false;\n    }\n\n    one.sort();\n    two.sort();\n\n    for (var i = 0, l = one.length; i < l; i++) {\n      if (one[i] !== two[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function trimSlashes(text) {\n    var trim_expression = /^\\/+|\\/+$/g;\n    return text.replace(trim_expression, '');\n  }\n\n  URI._parts = function () {\n    return {\n      protocol: null,\n      username: null,\n      password: null,\n      hostname: null,\n      urn: null,\n      port: null,\n      path: null,\n      query: null,\n      fragment: null,\n      // state\n      preventInvalidHostname: URI.preventInvalidHostname,\n      duplicateQueryParameters: URI.duplicateQueryParameters,\n      escapeQuerySpace: URI.escapeQuerySpace\n    };\n  }; // state: throw on invalid hostname\n  // see https://github.com/medialize/URI.js/pull/345\n  // and https://github.com/medialize/URI.js/issues/354\n\n\n  URI.preventInvalidHostname = false; // state: allow duplicate query parameters (a=1&a=1)\n\n  URI.duplicateQueryParameters = false; // state: replaces + with %20 (space in query strings)\n\n  URI.escapeQuerySpace = true; // static properties\n\n  URI.protocol_expression = /^[a-z][a-z0-9.+-]*$/i;\n  URI.idn_expression = /[^a-z0-9\\._-]/i;\n  URI.punycode_expression = /(xn--)/i; // well, 333.444.555.666 matches, but it sure ain't no IPv4 - do we care?\n\n  URI.ip4_expression = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/; // credits to Rich Brown\n  // source: http://forums.intermapper.com/viewtopic.php?p=1096#1096\n  // specification: http://www.ietf.org/rfc/rfc4291.txt\n\n  URI.ip6_expression = /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/; // expression used is \"gruber revised\" (@gruber v2) determined to be the\n  // best solution in a regex-golf we did a couple of ages ago at\n  // * http://mathiasbynens.be/demo/url-regex\n  // * http://rodneyrehm.de/t/url-regex.html\n\n  URI.find_uri_expression = /\\b((?:[a-z][\\w-]+:(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:'\".,<>?«»“”‘’]))/ig;\n  URI.findUri = {\n    // valid \"scheme://\" or \"www.\"\n    start: /\\b(?:([a-z][a-z0-9.+-]*:\\/\\/)|www\\.)/gi,\n    // everything up to the next whitespace\n    end: /[\\s\\r\\n]|$/,\n    // trim trailing punctuation captured by end RegExp\n    trim: /[`!()\\[\\]{};:'\".,<>?«»“”„‘’]+$/,\n    // balanced parens inclusion (), [], {}, <>\n    parens: /(\\([^\\)]*\\)|\\[[^\\]]*\\]|\\{[^}]*\\}|<[^>]*>)/g\n  };\n  URI.leading_whitespace_expression = /^[\\x00-\\x20\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]+/; // http://www.iana.org/assignments/uri-schemes.html\n  // http://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers#Well-known_ports\n\n  URI.defaultPorts = {\n    http: '80',\n    https: '443',\n    ftp: '21',\n    gopher: '70',\n    ws: '80',\n    wss: '443'\n  }; // list of protocols which always require a hostname\n\n  URI.hostProtocols = ['http', 'https']; // allowed hostname characters according to RFC 3986\n  // ALPHA DIGIT \"-\" \".\" \"_\" \"~\" \"!\" \"$\" \"&\" \"'\" \"(\" \")\" \"*\" \"+\" \",\" \";\" \"=\" %encoded\n  // I've never seen a (non-IDN) hostname other than: ALPHA DIGIT . - _\n\n  URI.invalid_hostname_characters = /[^a-zA-Z0-9\\.\\-:_]/; // map DOM Elements to their URI attribute\n\n  URI.domAttributes = {\n    'a': 'href',\n    'blockquote': 'cite',\n    'link': 'href',\n    'base': 'href',\n    'script': 'src',\n    'form': 'action',\n    'img': 'src',\n    'area': 'href',\n    'iframe': 'src',\n    'embed': 'src',\n    'source': 'src',\n    'track': 'src',\n    'input': 'src',\n    // but only if type=\"image\"\n    'audio': 'src',\n    'video': 'src'\n  };\n\n  URI.getDomAttribute = function (node) {\n    if (!node || !node.nodeName) {\n      return undefined;\n    }\n\n    var nodeName = node.nodeName.toLowerCase(); // <input> should only expose src for type=\"image\"\n\n    if (nodeName === 'input' && node.type !== 'image') {\n      return undefined;\n    }\n\n    return URI.domAttributes[nodeName];\n  };\n\n  function escapeForDumbFirefox36(value) {\n    // https://github.com/medialize/URI.js/issues/91\n    return escape(value);\n  } // encoding / decoding according to RFC3986\n\n\n  function strictEncodeURIComponent(string) {\n    // see https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/encodeURIComponent\n    return encodeURIComponent(string).replace(/[!'()*]/g, escapeForDumbFirefox36).replace(/\\*/g, '%2A');\n  }\n\n  URI.encode = strictEncodeURIComponent;\n  URI.decode = decodeURIComponent;\n\n  URI.iso8859 = function () {\n    URI.encode = escape;\n    URI.decode = unescape;\n  };\n\n  URI.unicode = function () {\n    URI.encode = strictEncodeURIComponent;\n    URI.decode = decodeURIComponent;\n  };\n\n  URI.characters = {\n    pathname: {\n      encode: {\n        // RFC3986 2.1: For consistency, URI producers and normalizers should\n        // use uppercase hexadecimal digits for all percent-encodings.\n        expression: /%(24|26|2B|2C|3B|3D|3A|40)/ig,\n        map: {\n          // -._~!'()*\n          '%24': '$',\n          '%26': '&',\n          '%2B': '+',\n          '%2C': ',',\n          '%3B': ';',\n          '%3D': '=',\n          '%3A': ':',\n          '%40': '@'\n        }\n      },\n      decode: {\n        expression: /[\\/\\?#]/g,\n        map: {\n          '/': '%2F',\n          '?': '%3F',\n          '#': '%23'\n        }\n      }\n    },\n    reserved: {\n      encode: {\n        // RFC3986 2.1: For consistency, URI producers and normalizers should\n        // use uppercase hexadecimal digits for all percent-encodings.\n        expression: /%(21|23|24|26|27|28|29|2A|2B|2C|2F|3A|3B|3D|3F|40|5B|5D)/ig,\n        map: {\n          // gen-delims\n          '%3A': ':',\n          '%2F': '/',\n          '%3F': '?',\n          '%23': '#',\n          '%5B': '[',\n          '%5D': ']',\n          '%40': '@',\n          // sub-delims\n          '%21': '!',\n          '%24': '$',\n          '%26': '&',\n          '%27': '\\'',\n          '%28': '(',\n          '%29': ')',\n          '%2A': '*',\n          '%2B': '+',\n          '%2C': ',',\n          '%3B': ';',\n          '%3D': '='\n        }\n      }\n    },\n    urnpath: {\n      // The characters under `encode` are the characters called out by RFC 2141 as being acceptable\n      // for usage in a URN. RFC2141 also calls out \"-\", \".\", and \"_\" as acceptable characters, but\n      // these aren't encoded by encodeURIComponent, so we don't have to call them out here. Also\n      // note that the colon character is not featured in the encoding map; this is because URI.js\n      // gives the colons in URNs semantic meaning as the delimiters of path segements, and so it\n      // should not appear unencoded in a segment itself.\n      // See also the note above about RFC3986 and capitalalized hex digits.\n      encode: {\n        expression: /%(21|24|27|28|29|2A|2B|2C|3B|3D|40)/ig,\n        map: {\n          '%21': '!',\n          '%24': '$',\n          '%27': '\\'',\n          '%28': '(',\n          '%29': ')',\n          '%2A': '*',\n          '%2B': '+',\n          '%2C': ',',\n          '%3B': ';',\n          '%3D': '=',\n          '%40': '@'\n        }\n      },\n      // These characters are the characters called out by RFC2141 as \"reserved\" characters that\n      // should never appear in a URN, plus the colon character (see note above).\n      decode: {\n        expression: /[\\/\\?#:]/g,\n        map: {\n          '/': '%2F',\n          '?': '%3F',\n          '#': '%23',\n          ':': '%3A'\n        }\n      }\n    }\n  };\n\n  URI.encodeQuery = function (string, escapeQuerySpace) {\n    var escaped = URI.encode(string + '');\n\n    if (escapeQuerySpace === undefined) {\n      escapeQuerySpace = URI.escapeQuerySpace;\n    }\n\n    return escapeQuerySpace ? escaped.replace(/%20/g, '+') : escaped;\n  };\n\n  URI.decodeQuery = function (string, escapeQuerySpace) {\n    string += '';\n\n    if (escapeQuerySpace === undefined) {\n      escapeQuerySpace = URI.escapeQuerySpace;\n    }\n\n    try {\n      return URI.decode(escapeQuerySpace ? string.replace(/\\+/g, '%20') : string);\n    } catch (e) {\n      // we're not going to mess with weird encodings,\n      // give up and return the undecoded original string\n      // see https://github.com/medialize/URI.js/issues/87\n      // see https://github.com/medialize/URI.js/issues/92\n      return string;\n    }\n  }; // generate encode/decode path functions\n\n\n  var _parts = {\n    'encode': 'encode',\n    'decode': 'decode'\n  };\n\n  var _part;\n\n  var generateAccessor = function (_group, _part) {\n    return function (string) {\n      try {\n        return URI[_part](string + '').replace(URI.characters[_group][_part].expression, function (c) {\n          return URI.characters[_group][_part].map[c];\n        });\n      } catch (e) {\n        // we're not going to mess with weird encodings,\n        // give up and return the undecoded original string\n        // see https://github.com/medialize/URI.js/issues/87\n        // see https://github.com/medialize/URI.js/issues/92\n        return string;\n      }\n    };\n  };\n\n  for (_part in _parts) {\n    URI[_part + 'PathSegment'] = generateAccessor('pathname', _parts[_part]);\n    URI[_part + 'UrnPathSegment'] = generateAccessor('urnpath', _parts[_part]);\n  }\n\n  var generateSegmentedPathFunction = function (_sep, _codingFuncName, _innerCodingFuncName) {\n    return function (string) {\n      // Why pass in names of functions, rather than the function objects themselves? The\n      // definitions of some functions (but in particular, URI.decode) will occasionally change due\n      // to URI.js having ISO8859 and Unicode modes. Passing in the name and getting it will ensure\n      // that the functions we use here are \"fresh\".\n      var actualCodingFunc;\n\n      if (!_innerCodingFuncName) {\n        actualCodingFunc = URI[_codingFuncName];\n      } else {\n        actualCodingFunc = function (string) {\n          return URI[_codingFuncName](URI[_innerCodingFuncName](string));\n        };\n      }\n\n      var segments = (string + '').split(_sep);\n\n      for (var i = 0, length = segments.length; i < length; i++) {\n        segments[i] = actualCodingFunc(segments[i]);\n      }\n\n      return segments.join(_sep);\n    };\n  }; // This takes place outside the above loop because we don't want, e.g., encodeUrnPath functions.\n\n\n  URI.decodePath = generateSegmentedPathFunction('/', 'decodePathSegment');\n  URI.decodeUrnPath = generateSegmentedPathFunction(':', 'decodeUrnPathSegment');\n  URI.recodePath = generateSegmentedPathFunction('/', 'encodePathSegment', 'decode');\n  URI.recodeUrnPath = generateSegmentedPathFunction(':', 'encodeUrnPathSegment', 'decode');\n  URI.encodeReserved = generateAccessor('reserved', 'encode');\n\n  URI.parse = function (string, parts) {\n    var pos;\n\n    if (!parts) {\n      parts = {\n        preventInvalidHostname: URI.preventInvalidHostname\n      };\n    }\n\n    string = string.replace(URI.leading_whitespace_expression, ''); // [protocol\"://\"[username[\":\"password]\"@\"]hostname[\":\"port]\"/\"?][path][\"?\"querystring][\"#\"fragment]\n    // extract fragment\n\n    pos = string.indexOf('#');\n\n    if (pos > -1) {\n      // escaping?\n      parts.fragment = string.substring(pos + 1) || null;\n      string = string.substring(0, pos);\n    } // extract query\n\n\n    pos = string.indexOf('?');\n\n    if (pos > -1) {\n      // escaping?\n      parts.query = string.substring(pos + 1) || null;\n      string = string.substring(0, pos);\n    } // slashes and backslashes have lost all meaning for the web protocols (https, http, wss, ws)\n\n\n    string = string.replace(/^(https?|ftp|wss?)?:+[/\\\\]*/i, '$1://'); // extract protocol\n\n    if (string.substring(0, 2) === '//') {\n      // relative-scheme\n      parts.protocol = null;\n      string = string.substring(2); // extract \"user:pass@host:port\"\n\n      string = URI.parseAuthority(string, parts);\n    } else {\n      pos = string.indexOf(':');\n\n      if (pos > -1) {\n        parts.protocol = string.substring(0, pos) || null;\n\n        if (parts.protocol && !parts.protocol.match(URI.protocol_expression)) {\n          // : may be within the path\n          parts.protocol = undefined;\n        } else if (string.substring(pos + 1, pos + 3).replace(/\\\\/g, '/') === '//') {\n          string = string.substring(pos + 3); // extract \"user:pass@host:port\"\n\n          string = URI.parseAuthority(string, parts);\n        } else {\n          string = string.substring(pos + 1);\n          parts.urn = true;\n        }\n      }\n    } // what's left must be the path\n\n\n    parts.path = string; // and we're done\n\n    return parts;\n  };\n\n  URI.parseHost = function (string, parts) {\n    if (!string) {\n      string = '';\n    } // Copy chrome, IE, opera backslash-handling behavior.\n    // Back slashes before the query string get converted to forward slashes\n    // See: https://github.com/joyent/node/blob/386fd24f49b0e9d1a8a076592a404168faeecc34/lib/url.js#L115-L124\n    // See: https://code.google.com/p/chromium/issues/detail?id=25916\n    // https://github.com/medialize/URI.js/pull/233\n\n\n    string = string.replace(/\\\\/g, '/'); // extract host:port\n\n    var pos = string.indexOf('/');\n    var bracketPos;\n    var t;\n\n    if (pos === -1) {\n      pos = string.length;\n    }\n\n    if (string.charAt(0) === '[') {\n      // IPv6 host - http://tools.ietf.org/html/draft-ietf-6man-text-addr-representation-04#section-6\n      // I claim most client software breaks on IPv6 anyways. To simplify things, URI only accepts\n      // IPv6+port in the format [2001:db8::1]:80 (for the time being)\n      bracketPos = string.indexOf(']');\n      parts.hostname = string.substring(1, bracketPos) || null;\n      parts.port = string.substring(bracketPos + 2, pos) || null;\n\n      if (parts.port === '/') {\n        parts.port = null;\n      }\n    } else {\n      var firstColon = string.indexOf(':');\n      var firstSlash = string.indexOf('/');\n      var nextColon = string.indexOf(':', firstColon + 1);\n\n      if (nextColon !== -1 && (firstSlash === -1 || nextColon < firstSlash)) {\n        // IPv6 host contains multiple colons - but no port\n        // this notation is actually not allowed by RFC 3986, but we're a liberal parser\n        parts.hostname = string.substring(0, pos) || null;\n        parts.port = null;\n      } else {\n        t = string.substring(0, pos).split(':');\n        parts.hostname = t[0] || null;\n        parts.port = t[1] || null;\n      }\n    }\n\n    if (parts.hostname && string.substring(pos).charAt(0) !== '/') {\n      pos++;\n      string = '/' + string;\n    }\n\n    if (parts.preventInvalidHostname) {\n      URI.ensureValidHostname(parts.hostname, parts.protocol);\n    }\n\n    if (parts.port) {\n      URI.ensureValidPort(parts.port);\n    }\n\n    return string.substring(pos) || '/';\n  };\n\n  URI.parseAuthority = function (string, parts) {\n    string = URI.parseUserinfo(string, parts);\n    return URI.parseHost(string, parts);\n  };\n\n  URI.parseUserinfo = function (string, parts) {\n    // extract username:password\n    var _string = string;\n    var firstBackSlash = string.indexOf('\\\\');\n\n    if (firstBackSlash !== -1) {\n      string = string.replace(/\\\\/g, '/');\n    }\n\n    var firstSlash = string.indexOf('/');\n    var pos = string.lastIndexOf('@', firstSlash > -1 ? firstSlash : string.length - 1);\n    var t; // authority@ must come before /path or \\path\n\n    if (pos > -1 && (firstSlash === -1 || pos < firstSlash)) {\n      t = string.substring(0, pos).split(':');\n      parts.username = t[0] ? URI.decode(t[0]) : null;\n      t.shift();\n      parts.password = t[0] ? URI.decode(t.join(':')) : null;\n      string = _string.substring(pos + 1);\n    } else {\n      parts.username = null;\n      parts.password = null;\n    }\n\n    return string;\n  };\n\n  URI.parseQuery = function (string, escapeQuerySpace) {\n    if (!string) {\n      return {};\n    } // throw out the funky business - \"?\"[name\"=\"value\"&\"]+\n\n\n    string = string.replace(/&+/g, '&').replace(/^\\?*&*|&+$/g, '');\n\n    if (!string) {\n      return {};\n    }\n\n    var items = {};\n    var splits = string.split('&');\n    var length = splits.length;\n    var v, name, value;\n\n    for (var i = 0; i < length; i++) {\n      v = splits[i].split('=');\n      name = URI.decodeQuery(v.shift(), escapeQuerySpace); // no \"=\" is null according to http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#collect-url-parameters\n\n      value = v.length ? URI.decodeQuery(v.join('='), escapeQuerySpace) : null;\n\n      if (name === '__proto__') {\n        // ignore attempt at exploiting JavaScript internals\n        continue;\n      } else if (hasOwn.call(items, name)) {\n        if (typeof items[name] === 'string' || items[name] === null) {\n          items[name] = [items[name]];\n        }\n\n        items[name].push(value);\n      } else {\n        items[name] = value;\n      }\n    }\n\n    return items;\n  };\n\n  URI.build = function (parts) {\n    var t = '';\n    var requireAbsolutePath = false;\n\n    if (parts.protocol) {\n      t += parts.protocol + ':';\n    }\n\n    if (!parts.urn && (t || parts.hostname)) {\n      t += '//';\n      requireAbsolutePath = true;\n    }\n\n    t += URI.buildAuthority(parts) || '';\n\n    if (typeof parts.path === 'string') {\n      if (parts.path.charAt(0) !== '/' && requireAbsolutePath) {\n        t += '/';\n      }\n\n      t += parts.path;\n    }\n\n    if (typeof parts.query === 'string' && parts.query) {\n      t += '?' + parts.query;\n    }\n\n    if (typeof parts.fragment === 'string' && parts.fragment) {\n      t += '#' + parts.fragment;\n    }\n\n    return t;\n  };\n\n  URI.buildHost = function (parts) {\n    var t = '';\n\n    if (!parts.hostname) {\n      return '';\n    } else if (URI.ip6_expression.test(parts.hostname)) {\n      t += '[' + parts.hostname + ']';\n    } else {\n      t += parts.hostname;\n    }\n\n    if (parts.port) {\n      t += ':' + parts.port;\n    }\n\n    return t;\n  };\n\n  URI.buildAuthority = function (parts) {\n    return URI.buildUserinfo(parts) + URI.buildHost(parts);\n  };\n\n  URI.buildUserinfo = function (parts) {\n    var t = '';\n\n    if (parts.username) {\n      t += URI.encode(parts.username);\n    }\n\n    if (parts.password) {\n      t += ':' + URI.encode(parts.password);\n    }\n\n    if (t) {\n      t += '@';\n    }\n\n    return t;\n  };\n\n  URI.buildQuery = function (data, duplicateQueryParameters, escapeQuerySpace) {\n    // according to http://tools.ietf.org/html/rfc3986 or http://labs.apache.org/webarch/uri/rfc/rfc3986.html\n    // being »-._~!$&'()*+,;=:@/?« %HEX and alnum are allowed\n    // the RFC explicitly states ?/foo being a valid use case, no mention of parameter syntax!\n    // URI.js treats the query string as being application/x-www-form-urlencoded\n    // see http://www.w3.org/TR/REC-html40/interact/forms.html#form-content-type\n    var t = '';\n    var unique, key, i, length;\n\n    for (key in data) {\n      if (key === '__proto__') {\n        // ignore attempt at exploiting JavaScript internals\n        continue;\n      } else if (hasOwn.call(data, key)) {\n        if (isArray(data[key])) {\n          unique = {};\n\n          for (i = 0, length = data[key].length; i < length; i++) {\n            if (data[key][i] !== undefined && unique[data[key][i] + ''] === undefined) {\n              t += '&' + URI.buildQueryParameter(key, data[key][i], escapeQuerySpace);\n\n              if (duplicateQueryParameters !== true) {\n                unique[data[key][i] + ''] = true;\n              }\n            }\n          }\n        } else if (data[key] !== undefined) {\n          t += '&' + URI.buildQueryParameter(key, data[key], escapeQuerySpace);\n        }\n      }\n    }\n\n    return t.substring(1);\n  };\n\n  URI.buildQueryParameter = function (name, value, escapeQuerySpace) {\n    // http://www.w3.org/TR/REC-html40/interact/forms.html#form-content-type -- application/x-www-form-urlencoded\n    // don't append \"=\" for null values, according to http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#url-parameter-serialization\n    return URI.encodeQuery(name, escapeQuerySpace) + (value !== null ? '=' + URI.encodeQuery(value, escapeQuerySpace) : '');\n  };\n\n  URI.addQuery = function (data, name, value) {\n    if (typeof name === 'object') {\n      for (var key in name) {\n        if (hasOwn.call(name, key)) {\n          URI.addQuery(data, key, name[key]);\n        }\n      }\n    } else if (typeof name === 'string') {\n      if (data[name] === undefined) {\n        data[name] = value;\n        return;\n      } else if (typeof data[name] === 'string') {\n        data[name] = [data[name]];\n      }\n\n      if (!isArray(value)) {\n        value = [value];\n      }\n\n      data[name] = (data[name] || []).concat(value);\n    } else {\n      throw new TypeError('URI.addQuery() accepts an object, string as the name parameter');\n    }\n  };\n\n  URI.setQuery = function (data, name, value) {\n    if (typeof name === 'object') {\n      for (var key in name) {\n        if (hasOwn.call(name, key)) {\n          URI.setQuery(data, key, name[key]);\n        }\n      }\n    } else if (typeof name === 'string') {\n      data[name] = value === undefined ? null : value;\n    } else {\n      throw new TypeError('URI.setQuery() accepts an object, string as the name parameter');\n    }\n  };\n\n  URI.removeQuery = function (data, name, value) {\n    var i, length, key;\n\n    if (isArray(name)) {\n      for (i = 0, length = name.length; i < length; i++) {\n        data[name[i]] = undefined;\n      }\n    } else if (getType(name) === 'RegExp') {\n      for (key in data) {\n        if (name.test(key)) {\n          data[key] = undefined;\n        }\n      }\n    } else if (typeof name === 'object') {\n      for (key in name) {\n        if (hasOwn.call(name, key)) {\n          URI.removeQuery(data, key, name[key]);\n        }\n      }\n    } else if (typeof name === 'string') {\n      if (value !== undefined) {\n        if (getType(value) === 'RegExp') {\n          if (!isArray(data[name]) && value.test(data[name])) {\n            data[name] = undefined;\n          } else {\n            data[name] = filterArrayValues(data[name], value);\n          }\n        } else if (data[name] === String(value) && (!isArray(value) || value.length === 1)) {\n          data[name] = undefined;\n        } else if (isArray(data[name])) {\n          data[name] = filterArrayValues(data[name], value);\n        }\n      } else {\n        data[name] = undefined;\n      }\n    } else {\n      throw new TypeError('URI.removeQuery() accepts an object, string, RegExp as the first parameter');\n    }\n  };\n\n  URI.hasQuery = function (data, name, value, withinArray) {\n    switch (getType(name)) {\n      case 'String':\n        // Nothing to do here\n        break;\n\n      case 'RegExp':\n        for (var key in data) {\n          if (hasOwn.call(data, key)) {\n            if (name.test(key) && (value === undefined || URI.hasQuery(data, key, value))) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n\n      case 'Object':\n        for (var _key in name) {\n          if (hasOwn.call(name, _key)) {\n            if (!URI.hasQuery(data, _key, name[_key])) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n\n      default:\n        throw new TypeError('URI.hasQuery() accepts a string, regular expression or object as the name parameter');\n    }\n\n    switch (getType(value)) {\n      case 'Undefined':\n        // true if exists (but may be empty)\n        return name in data;\n      // data[name] !== undefined;\n\n      case 'Boolean':\n        // true if exists and non-empty\n        var _booly = Boolean(isArray(data[name]) ? data[name].length : data[name]);\n\n        return value === _booly;\n\n      case 'Function':\n        // allow complex comparison\n        return !!value(data[name], name, data);\n\n      case 'Array':\n        if (!isArray(data[name])) {\n          return false;\n        }\n\n        var op = withinArray ? arrayContains : arraysEqual;\n        return op(data[name], value);\n\n      case 'RegExp':\n        if (!isArray(data[name])) {\n          return Boolean(data[name] && data[name].match(value));\n        }\n\n        if (!withinArray) {\n          return false;\n        }\n\n        return arrayContains(data[name], value);\n\n      case 'Number':\n        value = String(value);\n\n      /* falls through */\n\n      case 'String':\n        if (!isArray(data[name])) {\n          return data[name] === value;\n        }\n\n        if (!withinArray) {\n          return false;\n        }\n\n        return arrayContains(data[name], value);\n\n      default:\n        throw new TypeError('URI.hasQuery() accepts undefined, boolean, string, number, RegExp, Function as the value parameter');\n    }\n  };\n\n  URI.joinPaths = function () {\n    var input = [];\n    var segments = [];\n    var nonEmptySegments = 0;\n\n    for (var i = 0; i < arguments.length; i++) {\n      var url = new URI(arguments[i]);\n      input.push(url);\n\n      var _segments = url.segment();\n\n      for (var s = 0; s < _segments.length; s++) {\n        if (typeof _segments[s] === 'string') {\n          segments.push(_segments[s]);\n        }\n\n        if (_segments[s]) {\n          nonEmptySegments++;\n        }\n      }\n    }\n\n    if (!segments.length || !nonEmptySegments) {\n      return new URI('');\n    }\n\n    var uri = new URI('').segment(segments);\n\n    if (input[0].path() === '' || input[0].path().slice(0, 1) === '/') {\n      uri.path('/' + uri.path());\n    }\n\n    return uri.normalize();\n  };\n\n  URI.commonPath = function (one, two) {\n    var length = Math.min(one.length, two.length);\n    var pos; // find first non-matching character\n\n    for (pos = 0; pos < length; pos++) {\n      if (one.charAt(pos) !== two.charAt(pos)) {\n        pos--;\n        break;\n      }\n    }\n\n    if (pos < 1) {\n      return one.charAt(0) === two.charAt(0) && one.charAt(0) === '/' ? '/' : '';\n    } // revert to last /\n\n\n    if (one.charAt(pos) !== '/' || two.charAt(pos) !== '/') {\n      pos = one.substring(0, pos).lastIndexOf('/');\n    }\n\n    return one.substring(0, pos + 1);\n  };\n\n  URI.withinString = function (string, callback, options) {\n    options || (options = {});\n\n    var _start = options.start || URI.findUri.start;\n\n    var _end = options.end || URI.findUri.end;\n\n    var _trim = options.trim || URI.findUri.trim;\n\n    var _parens = options.parens || URI.findUri.parens;\n\n    var _attributeOpen = /[a-z0-9-]=[\"']?$/i;\n    _start.lastIndex = 0;\n\n    while (true) {\n      var match = _start.exec(string);\n\n      if (!match) {\n        break;\n      }\n\n      var start = match.index;\n\n      if (options.ignoreHtml) {\n        // attribut(e=[\"']?$)\n        var attributeOpen = string.slice(Math.max(start - 3, 0), start);\n\n        if (attributeOpen && _attributeOpen.test(attributeOpen)) {\n          continue;\n        }\n      }\n\n      var end = start + string.slice(start).search(_end);\n      var slice = string.slice(start, end); // make sure we include well balanced parens\n\n      var parensEnd = -1;\n\n      while (true) {\n        var parensMatch = _parens.exec(slice);\n\n        if (!parensMatch) {\n          break;\n        }\n\n        var parensMatchEnd = parensMatch.index + parensMatch[0].length;\n        parensEnd = Math.max(parensEnd, parensMatchEnd);\n      }\n\n      if (parensEnd > -1) {\n        slice = slice.slice(0, parensEnd) + slice.slice(parensEnd).replace(_trim, '');\n      } else {\n        slice = slice.replace(_trim, '');\n      }\n\n      if (slice.length <= match[0].length) {\n        // the extract only contains the starting marker of a URI,\n        // e.g. \"www\" or \"http://\"\n        continue;\n      }\n\n      if (options.ignore && options.ignore.test(slice)) {\n        continue;\n      }\n\n      end = start + slice.length;\n      var result = callback(slice, start, end, string);\n\n      if (result === undefined) {\n        _start.lastIndex = end;\n        continue;\n      }\n\n      result = String(result);\n      string = string.slice(0, start) + result + string.slice(end);\n      _start.lastIndex = start + result.length;\n    }\n\n    _start.lastIndex = 0;\n    return string;\n  };\n\n  URI.ensureValidHostname = function (v, protocol) {\n    // Theoretically URIs allow percent-encoding in Hostnames (according to RFC 3986)\n    // they are not part of DNS and therefore ignored by URI.js\n    var hasHostname = !!v; // not null and not an empty string\n\n    var hasProtocol = !!protocol;\n    var rejectEmptyHostname = false;\n\n    if (hasProtocol) {\n      rejectEmptyHostname = arrayContains(URI.hostProtocols, protocol);\n    }\n\n    if (rejectEmptyHostname && !hasHostname) {\n      throw new TypeError('Hostname cannot be empty, if protocol is ' + protocol);\n    } else if (v && v.match(URI.invalid_hostname_characters)) {\n      // test punycode\n      if (!punycode) {\n        throw new TypeError('Hostname \"' + v + '\" contains characters other than [A-Z0-9.-:_] and Punycode.js is not available');\n      }\n\n      if (punycode.toASCII(v).match(URI.invalid_hostname_characters)) {\n        throw new TypeError('Hostname \"' + v + '\" contains characters other than [A-Z0-9.-:_]');\n      }\n    }\n  };\n\n  URI.ensureValidPort = function (v) {\n    if (!v) {\n      return;\n    }\n\n    var port = Number(v);\n\n    if (isInteger(port) && port > 0 && port < 65536) {\n      return;\n    }\n\n    throw new TypeError('Port \"' + v + '\" is not a valid port');\n  }; // noConflict\n\n\n  URI.noConflict = function (removeAll) {\n    if (removeAll) {\n      var unconflicted = {\n        URI: this.noConflict()\n      };\n\n      if (root.URITemplate && typeof root.URITemplate.noConflict === 'function') {\n        unconflicted.URITemplate = root.URITemplate.noConflict();\n      }\n\n      if (root.IPv6 && typeof root.IPv6.noConflict === 'function') {\n        unconflicted.IPv6 = root.IPv6.noConflict();\n      }\n\n      if (root.SecondLevelDomains && typeof root.SecondLevelDomains.noConflict === 'function') {\n        unconflicted.SecondLevelDomains = root.SecondLevelDomains.noConflict();\n      }\n\n      return unconflicted;\n    } else if (root.URI === this) {\n      root.URI = _URI;\n    }\n\n    return this;\n  };\n\n  p.build = function (deferBuild) {\n    if (deferBuild === true) {\n      this._deferred_build = true;\n    } else if (deferBuild === undefined || this._deferred_build) {\n      this._string = URI.build(this._parts);\n      this._deferred_build = false;\n    }\n\n    return this;\n  };\n\n  p.clone = function () {\n    return new URI(this);\n  };\n\n  p.valueOf = p.toString = function () {\n    return this.build(false)._string;\n  };\n\n  function generateSimpleAccessor(_part) {\n    return function (v, build) {\n      if (v === undefined) {\n        return this._parts[_part] || '';\n      } else {\n        this._parts[_part] = v || null;\n        this.build(!build);\n        return this;\n      }\n    };\n  }\n\n  function generatePrefixAccessor(_part, _key) {\n    return function (v, build) {\n      if (v === undefined) {\n        return this._parts[_part] || '';\n      } else {\n        if (v !== null) {\n          v = v + '';\n\n          if (v.charAt(0) === _key) {\n            v = v.substring(1);\n          }\n        }\n\n        this._parts[_part] = v;\n        this.build(!build);\n        return this;\n      }\n    };\n  }\n\n  p.protocol = generateSimpleAccessor('protocol');\n  p.username = generateSimpleAccessor('username');\n  p.password = generateSimpleAccessor('password');\n  p.hostname = generateSimpleAccessor('hostname');\n  p.port = generateSimpleAccessor('port');\n  p.query = generatePrefixAccessor('query', '?');\n  p.fragment = generatePrefixAccessor('fragment', '#');\n\n  p.search = function (v, build) {\n    var t = this.query(v, build);\n    return typeof t === 'string' && t.length ? '?' + t : t;\n  };\n\n  p.hash = function (v, build) {\n    var t = this.fragment(v, build);\n    return typeof t === 'string' && t.length ? '#' + t : t;\n  };\n\n  p.pathname = function (v, build) {\n    if (v === undefined || v === true) {\n      var res = this._parts.path || (this._parts.hostname ? '/' : '');\n      return v ? (this._parts.urn ? URI.decodeUrnPath : URI.decodePath)(res) : res;\n    } else {\n      if (this._parts.urn) {\n        this._parts.path = v ? URI.recodeUrnPath(v) : '';\n      } else {\n        this._parts.path = v ? URI.recodePath(v) : '/';\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n\n  p.path = p.pathname;\n\n  p.href = function (href, build) {\n    var key;\n\n    if (href === undefined) {\n      return this.toString();\n    }\n\n    this._string = '';\n    this._parts = URI._parts();\n\n    var _URI = href instanceof URI;\n\n    var _object = typeof href === 'object' && (href.hostname || href.path || href.pathname);\n\n    if (href.nodeName) {\n      var attribute = URI.getDomAttribute(href);\n      href = href[attribute] || '';\n      _object = false;\n    } // window.location is reported to be an object, but it's not the sort\n    // of object we're looking for:\n    // * location.protocol ends with a colon\n    // * location.query != object.search\n    // * location.hash != object.fragment\n    // simply serializing the unknown object should do the trick\n    // (for location, not for everything...)\n\n\n    if (!_URI && _object && href.pathname !== undefined) {\n      href = href.toString();\n    }\n\n    if (typeof href === 'string' || href instanceof String) {\n      this._parts = URI.parse(String(href), this._parts);\n    } else if (_URI || _object) {\n      var src = _URI ? href._parts : href;\n\n      for (key in src) {\n        if (key === 'query') {\n          continue;\n        }\n\n        if (hasOwn.call(this._parts, key)) {\n          this._parts[key] = src[key];\n        }\n      }\n\n      if (src.query) {\n        this.query(src.query, false);\n      }\n    } else {\n      throw new TypeError('invalid input');\n    }\n\n    this.build(!build);\n    return this;\n  }; // identification accessors\n\n\n  p.is = function (what) {\n    var ip = false;\n    var ip4 = false;\n    var ip6 = false;\n    var name = false;\n    var sld = false;\n    var idn = false;\n    var punycode = false;\n    var relative = !this._parts.urn;\n\n    if (this._parts.hostname) {\n      relative = false;\n      ip4 = URI.ip4_expression.test(this._parts.hostname);\n      ip6 = URI.ip6_expression.test(this._parts.hostname);\n      ip = ip4 || ip6;\n      name = !ip;\n      sld = name && SLD && SLD.has(this._parts.hostname);\n      idn = name && URI.idn_expression.test(this._parts.hostname);\n      punycode = name && URI.punycode_expression.test(this._parts.hostname);\n    }\n\n    switch (what.toLowerCase()) {\n      case 'relative':\n        return relative;\n\n      case 'absolute':\n        return !relative;\n      // hostname identification\n\n      case 'domain':\n      case 'name':\n        return name;\n\n      case 'sld':\n        return sld;\n\n      case 'ip':\n        return ip;\n\n      case 'ip4':\n      case 'ipv4':\n      case 'inet4':\n        return ip4;\n\n      case 'ip6':\n      case 'ipv6':\n      case 'inet6':\n        return ip6;\n\n      case 'idn':\n        return idn;\n\n      case 'url':\n        return !this._parts.urn;\n\n      case 'urn':\n        return !!this._parts.urn;\n\n      case 'punycode':\n        return punycode;\n    }\n\n    return null;\n  }; // component specific input validation\n\n\n  var _protocol = p.protocol;\n  var _port = p.port;\n  var _hostname = p.hostname;\n\n  p.protocol = function (v, build) {\n    if (v) {\n      // accept trailing ://\n      v = v.replace(/:(\\/\\/)?$/, '');\n\n      if (!v.match(URI.protocol_expression)) {\n        throw new TypeError('Protocol \"' + v + '\" contains characters other than [A-Z0-9.+-] or doesn\\'t start with [A-Z]');\n      }\n    }\n\n    return _protocol.call(this, v, build);\n  };\n\n  p.scheme = p.protocol;\n\n  p.port = function (v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v !== undefined) {\n      if (v === 0) {\n        v = null;\n      }\n\n      if (v) {\n        v += '';\n\n        if (v.charAt(0) === ':') {\n          v = v.substring(1);\n        }\n\n        URI.ensureValidPort(v);\n      }\n    }\n\n    return _port.call(this, v, build);\n  };\n\n  p.hostname = function (v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v !== undefined) {\n      var x = {\n        preventInvalidHostname: this._parts.preventInvalidHostname\n      };\n      var res = URI.parseHost(v, x);\n\n      if (res !== '/') {\n        throw new TypeError('Hostname \"' + v + '\" contains characters other than [A-Z0-9.-]');\n      }\n\n      v = x.hostname;\n\n      if (this._parts.preventInvalidHostname) {\n        URI.ensureValidHostname(v, this._parts.protocol);\n      }\n    }\n\n    return _hostname.call(this, v, build);\n  }; // compound accessors\n\n\n  p.origin = function (v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined) {\n      var protocol = this.protocol();\n      var authority = this.authority();\n\n      if (!authority) {\n        return '';\n      }\n\n      return (protocol ? protocol + '://' : '') + this.authority();\n    } else {\n      var origin = URI(v);\n      this.protocol(origin.protocol()).authority(origin.authority()).build(!build);\n      return this;\n    }\n  };\n\n  p.host = function (v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined) {\n      return this._parts.hostname ? URI.buildHost(this._parts) : '';\n    } else {\n      var res = URI.parseHost(v, this._parts);\n\n      if (res !== '/') {\n        throw new TypeError('Hostname \"' + v + '\" contains characters other than [A-Z0-9.-]');\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n\n  p.authority = function (v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined) {\n      return this._parts.hostname ? URI.buildAuthority(this._parts) : '';\n    } else {\n      var res = URI.parseAuthority(v, this._parts);\n\n      if (res !== '/') {\n        throw new TypeError('Hostname \"' + v + '\" contains characters other than [A-Z0-9.-]');\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n\n  p.userinfo = function (v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined) {\n      var t = URI.buildUserinfo(this._parts);\n      return t ? t.substring(0, t.length - 1) : t;\n    } else {\n      if (v[v.length - 1] !== '@') {\n        v += '@';\n      }\n\n      URI.parseUserinfo(v, this._parts);\n      this.build(!build);\n      return this;\n    }\n  };\n\n  p.resource = function (v, build) {\n    var parts;\n\n    if (v === undefined) {\n      return this.path() + this.search() + this.hash();\n    }\n\n    parts = URI.parse(v);\n    this._parts.path = parts.path;\n    this._parts.query = parts.query;\n    this._parts.fragment = parts.fragment;\n    this.build(!build);\n    return this;\n  }; // fraction accessors\n\n\n  p.subdomain = function (v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    } // convenience, return \"www\" from \"www.example.org\"\n\n\n    if (v === undefined) {\n      if (!this._parts.hostname || this.is('IP')) {\n        return '';\n      } // grab domain and add another segment\n\n\n      var end = this._parts.hostname.length - this.domain().length - 1;\n      return this._parts.hostname.substring(0, end) || '';\n    } else {\n      var e = this._parts.hostname.length - this.domain().length;\n\n      var sub = this._parts.hostname.substring(0, e);\n\n      var replace = new RegExp('^' + escapeRegEx(sub));\n\n      if (v && v.charAt(v.length - 1) !== '.') {\n        v += '.';\n      }\n\n      if (v.indexOf(':') !== -1) {\n        throw new TypeError('Domains cannot contain colons');\n      }\n\n      if (v) {\n        URI.ensureValidHostname(v, this._parts.protocol);\n      }\n\n      this._parts.hostname = this._parts.hostname.replace(replace, v);\n      this.build(!build);\n      return this;\n    }\n  };\n\n  p.domain = function (v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (typeof v === 'boolean') {\n      build = v;\n      v = undefined;\n    } // convenience, return \"example.org\" from \"www.example.org\"\n\n\n    if (v === undefined) {\n      if (!this._parts.hostname || this.is('IP')) {\n        return '';\n      } // if hostname consists of 1 or 2 segments, it must be the domain\n\n\n      var t = this._parts.hostname.match(/\\./g);\n\n      if (t && t.length < 2) {\n        return this._parts.hostname;\n      } // grab tld and add another segment\n\n\n      var end = this._parts.hostname.length - this.tld(build).length - 1;\n      end = this._parts.hostname.lastIndexOf('.', end - 1) + 1;\n      return this._parts.hostname.substring(end) || '';\n    } else {\n      if (!v) {\n        throw new TypeError('cannot set domain empty');\n      }\n\n      if (v.indexOf(':') !== -1) {\n        throw new TypeError('Domains cannot contain colons');\n      }\n\n      URI.ensureValidHostname(v, this._parts.protocol);\n\n      if (!this._parts.hostname || this.is('IP')) {\n        this._parts.hostname = v;\n      } else {\n        var replace = new RegExp(escapeRegEx(this.domain()) + '$');\n        this._parts.hostname = this._parts.hostname.replace(replace, v);\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n\n  p.tld = function (v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (typeof v === 'boolean') {\n      build = v;\n      v = undefined;\n    } // return \"org\" from \"www.example.org\"\n\n\n    if (v === undefined) {\n      if (!this._parts.hostname || this.is('IP')) {\n        return '';\n      }\n\n      var pos = this._parts.hostname.lastIndexOf('.');\n\n      var tld = this._parts.hostname.substring(pos + 1);\n\n      if (build !== true && SLD && SLD.list[tld.toLowerCase()]) {\n        return SLD.get(this._parts.hostname) || tld;\n      }\n\n      return tld;\n    } else {\n      var replace;\n\n      if (!v) {\n        throw new TypeError('cannot set TLD empty');\n      } else if (v.match(/[^a-zA-Z0-9-]/)) {\n        if (SLD && SLD.is(v)) {\n          replace = new RegExp(escapeRegEx(this.tld()) + '$');\n          this._parts.hostname = this._parts.hostname.replace(replace, v);\n        } else {\n          throw new TypeError('TLD \"' + v + '\" contains characters other than [A-Z0-9]');\n        }\n      } else if (!this._parts.hostname || this.is('IP')) {\n        throw new ReferenceError('cannot set TLD on non-domain host');\n      } else {\n        replace = new RegExp(escapeRegEx(this.tld()) + '$');\n        this._parts.hostname = this._parts.hostname.replace(replace, v);\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n\n  p.directory = function (v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined || v === true) {\n      if (!this._parts.path && !this._parts.hostname) {\n        return '';\n      }\n\n      if (this._parts.path === '/') {\n        return '/';\n      }\n\n      var end = this._parts.path.length - this.filename().length - 1;\n      var res = this._parts.path.substring(0, end) || (this._parts.hostname ? '/' : '');\n      return v ? URI.decodePath(res) : res;\n    } else {\n      var e = this._parts.path.length - this.filename().length;\n\n      var directory = this._parts.path.substring(0, e);\n\n      var replace = new RegExp('^' + escapeRegEx(directory)); // fully qualifier directories begin with a slash\n\n      if (!this.is('relative')) {\n        if (!v) {\n          v = '/';\n        }\n\n        if (v.charAt(0) !== '/') {\n          v = '/' + v;\n        }\n      } // directories always end with a slash\n\n\n      if (v && v.charAt(v.length - 1) !== '/') {\n        v += '/';\n      }\n\n      v = URI.recodePath(v);\n      this._parts.path = this._parts.path.replace(replace, v);\n      this.build(!build);\n      return this;\n    }\n  };\n\n  p.filename = function (v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (typeof v !== 'string') {\n      if (!this._parts.path || this._parts.path === '/') {\n        return '';\n      }\n\n      var pos = this._parts.path.lastIndexOf('/');\n\n      var res = this._parts.path.substring(pos + 1);\n\n      return v ? URI.decodePathSegment(res) : res;\n    } else {\n      var mutatedDirectory = false;\n\n      if (v.charAt(0) === '/') {\n        v = v.substring(1);\n      }\n\n      if (v.match(/\\.?\\//)) {\n        mutatedDirectory = true;\n      }\n\n      var replace = new RegExp(escapeRegEx(this.filename()) + '$');\n      v = URI.recodePath(v);\n      this._parts.path = this._parts.path.replace(replace, v);\n\n      if (mutatedDirectory) {\n        this.normalizePath(build);\n      } else {\n        this.build(!build);\n      }\n\n      return this;\n    }\n  };\n\n  p.suffix = function (v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined || v === true) {\n      if (!this._parts.path || this._parts.path === '/') {\n        return '';\n      }\n\n      var filename = this.filename();\n      var pos = filename.lastIndexOf('.');\n      var s, res;\n\n      if (pos === -1) {\n        return '';\n      } // suffix may only contain alnum characters (yup, I made this up.)\n\n\n      s = filename.substring(pos + 1);\n      res = /^[a-z0-9%]+$/i.test(s) ? s : '';\n      return v ? URI.decodePathSegment(res) : res;\n    } else {\n      if (v.charAt(0) === '.') {\n        v = v.substring(1);\n      }\n\n      var suffix = this.suffix();\n      var replace;\n\n      if (!suffix) {\n        if (!v) {\n          return this;\n        }\n\n        this._parts.path += '.' + URI.recodePath(v);\n      } else if (!v) {\n        replace = new RegExp(escapeRegEx('.' + suffix) + '$');\n      } else {\n        replace = new RegExp(escapeRegEx(suffix) + '$');\n      }\n\n      if (replace) {\n        v = URI.recodePath(v);\n        this._parts.path = this._parts.path.replace(replace, v);\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n\n  p.segment = function (segment, v, build) {\n    var separator = this._parts.urn ? ':' : '/';\n    var path = this.path();\n    var absolute = path.substring(0, 1) === '/';\n    var segments = path.split(separator);\n\n    if (segment !== undefined && typeof segment !== 'number') {\n      build = v;\n      v = segment;\n      segment = undefined;\n    }\n\n    if (segment !== undefined && typeof segment !== 'number') {\n      throw new Error('Bad segment \"' + segment + '\", must be 0-based integer');\n    }\n\n    if (absolute) {\n      segments.shift();\n    }\n\n    if (segment < 0) {\n      // allow negative indexes to address from the end\n      segment = Math.max(segments.length + segment, 0);\n    }\n\n    if (v === undefined) {\n      /*jshint laxbreak: true */\n      return segment === undefined ? segments : segments[segment];\n      /*jshint laxbreak: false */\n    } else if (segment === null || segments[segment] === undefined) {\n      if (isArray(v)) {\n        segments = []; // collapse empty elements within array\n\n        for (var i = 0, l = v.length; i < l; i++) {\n          if (!v[i].length && (!segments.length || !segments[segments.length - 1].length)) {\n            continue;\n          }\n\n          if (segments.length && !segments[segments.length - 1].length) {\n            segments.pop();\n          }\n\n          segments.push(trimSlashes(v[i]));\n        }\n      } else if (v || typeof v === 'string') {\n        v = trimSlashes(v);\n\n        if (segments[segments.length - 1] === '') {\n          // empty trailing elements have to be overwritten\n          // to prevent results such as /foo//bar\n          segments[segments.length - 1] = v;\n        } else {\n          segments.push(v);\n        }\n      }\n    } else {\n      if (v) {\n        segments[segment] = trimSlashes(v);\n      } else {\n        segments.splice(segment, 1);\n      }\n    }\n\n    if (absolute) {\n      segments.unshift('');\n    }\n\n    return this.path(segments.join(separator), build);\n  };\n\n  p.segmentCoded = function (segment, v, build) {\n    var segments, i, l;\n\n    if (typeof segment !== 'number') {\n      build = v;\n      v = segment;\n      segment = undefined;\n    }\n\n    if (v === undefined) {\n      segments = this.segment(segment, v, build);\n\n      if (!isArray(segments)) {\n        segments = segments !== undefined ? URI.decode(segments) : undefined;\n      } else {\n        for (i = 0, l = segments.length; i < l; i++) {\n          segments[i] = URI.decode(segments[i]);\n        }\n      }\n\n      return segments;\n    }\n\n    if (!isArray(v)) {\n      v = typeof v === 'string' || v instanceof String ? URI.encode(v) : v;\n    } else {\n      for (i = 0, l = v.length; i < l; i++) {\n        v[i] = URI.encode(v[i]);\n      }\n    }\n\n    return this.segment(segment, v, build);\n  }; // mutating query string\n\n\n  var q = p.query;\n\n  p.query = function (v, build) {\n    if (v === true) {\n      return URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n    } else if (typeof v === 'function') {\n      var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n      var result = v.call(this, data);\n      this._parts.query = URI.buildQuery(result || data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);\n      this.build(!build);\n      return this;\n    } else if (v !== undefined && typeof v !== 'string') {\n      this._parts.query = URI.buildQuery(v, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);\n      this.build(!build);\n      return this;\n    } else {\n      return q.call(this, v, build);\n    }\n  };\n\n  p.setQuery = function (name, value, build) {\n    var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n\n    if (typeof name === 'string' || name instanceof String) {\n      data[name] = value !== undefined ? value : null;\n    } else if (typeof name === 'object') {\n      for (var key in name) {\n        if (hasOwn.call(name, key)) {\n          data[key] = name[key];\n        }\n      }\n    } else {\n      throw new TypeError('URI.addQuery() accepts an object, string as the name parameter');\n    }\n\n    this._parts.query = URI.buildQuery(data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);\n\n    if (typeof name !== 'string') {\n      build = value;\n    }\n\n    this.build(!build);\n    return this;\n  };\n\n  p.addQuery = function (name, value, build) {\n    var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n    URI.addQuery(data, name, value === undefined ? null : value);\n    this._parts.query = URI.buildQuery(data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);\n\n    if (typeof name !== 'string') {\n      build = value;\n    }\n\n    this.build(!build);\n    return this;\n  };\n\n  p.removeQuery = function (name, value, build) {\n    var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n    URI.removeQuery(data, name, value);\n    this._parts.query = URI.buildQuery(data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);\n\n    if (typeof name !== 'string') {\n      build = value;\n    }\n\n    this.build(!build);\n    return this;\n  };\n\n  p.hasQuery = function (name, value, withinArray) {\n    var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n    return URI.hasQuery(data, name, value, withinArray);\n  };\n\n  p.setSearch = p.setQuery;\n  p.addSearch = p.addQuery;\n  p.removeSearch = p.removeQuery;\n  p.hasSearch = p.hasQuery; // sanitizing URLs\n\n  p.normalize = function () {\n    if (this._parts.urn) {\n      return this.normalizeProtocol(false).normalizePath(false).normalizeQuery(false).normalizeFragment(false).build();\n    }\n\n    return this.normalizeProtocol(false).normalizeHostname(false).normalizePort(false).normalizePath(false).normalizeQuery(false).normalizeFragment(false).build();\n  };\n\n  p.normalizeProtocol = function (build) {\n    if (typeof this._parts.protocol === 'string') {\n      this._parts.protocol = this._parts.protocol.toLowerCase();\n      this.build(!build);\n    }\n\n    return this;\n  };\n\n  p.normalizeHostname = function (build) {\n    if (this._parts.hostname) {\n      if (this.is('IDN') && punycode) {\n        this._parts.hostname = punycode.toASCII(this._parts.hostname);\n      } else if (this.is('IPv6') && IPv6) {\n        this._parts.hostname = IPv6.best(this._parts.hostname);\n      }\n\n      this._parts.hostname = this._parts.hostname.toLowerCase();\n      this.build(!build);\n    }\n\n    return this;\n  };\n\n  p.normalizePort = function (build) {\n    // remove port of it's the protocol's default\n    if (typeof this._parts.protocol === 'string' && this._parts.port === URI.defaultPorts[this._parts.protocol]) {\n      this._parts.port = null;\n      this.build(!build);\n    }\n\n    return this;\n  };\n\n  p.normalizePath = function (build) {\n    var _path = this._parts.path;\n\n    if (!_path) {\n      return this;\n    }\n\n    if (this._parts.urn) {\n      this._parts.path = URI.recodeUrnPath(this._parts.path);\n      this.build(!build);\n      return this;\n    }\n\n    if (this._parts.path === '/') {\n      return this;\n    }\n\n    _path = URI.recodePath(_path);\n\n    var _was_relative;\n\n    var _leadingParents = '';\n\n    var _parent, _pos; // handle relative paths\n\n\n    if (_path.charAt(0) !== '/') {\n      _was_relative = true;\n      _path = '/' + _path;\n    } // handle relative files (as opposed to directories)\n\n\n    if (_path.slice(-3) === '/..' || _path.slice(-2) === '/.') {\n      _path += '/';\n    } // resolve simples\n\n\n    _path = _path.replace(/(\\/(\\.\\/)+)|(\\/\\.$)/g, '/').replace(/\\/{2,}/g, '/'); // remember leading parents\n\n    if (_was_relative) {\n      _leadingParents = _path.substring(1).match(/^(\\.\\.\\/)+/) || '';\n\n      if (_leadingParents) {\n        _leadingParents = _leadingParents[0];\n      }\n    } // resolve parents\n\n\n    while (true) {\n      _parent = _path.search(/\\/\\.\\.(\\/|$)/);\n\n      if (_parent === -1) {\n        // no more ../ to resolve\n        break;\n      } else if (_parent === 0) {\n        // top level cannot be relative, skip it\n        _path = _path.substring(3);\n        continue;\n      }\n\n      _pos = _path.substring(0, _parent).lastIndexOf('/');\n\n      if (_pos === -1) {\n        _pos = _parent;\n      }\n\n      _path = _path.substring(0, _pos) + _path.substring(_parent + 3);\n    } // revert to relative\n\n\n    if (_was_relative && this.is('relative')) {\n      _path = _leadingParents + _path.substring(1);\n    }\n\n    this._parts.path = _path;\n    this.build(!build);\n    return this;\n  };\n\n  p.normalizePathname = p.normalizePath;\n\n  p.normalizeQuery = function (build) {\n    if (typeof this._parts.query === 'string') {\n      if (!this._parts.query.length) {\n        this._parts.query = null;\n      } else {\n        this.query(URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace));\n      }\n\n      this.build(!build);\n    }\n\n    return this;\n  };\n\n  p.normalizeFragment = function (build) {\n    if (!this._parts.fragment) {\n      this._parts.fragment = null;\n      this.build(!build);\n    }\n\n    return this;\n  };\n\n  p.normalizeSearch = p.normalizeQuery;\n  p.normalizeHash = p.normalizeFragment;\n\n  p.iso8859 = function () {\n    // expect unicode input, iso8859 output\n    var e = URI.encode;\n    var d = URI.decode;\n    URI.encode = escape;\n    URI.decode = decodeURIComponent;\n\n    try {\n      this.normalize();\n    } finally {\n      URI.encode = e;\n      URI.decode = d;\n    }\n\n    return this;\n  };\n\n  p.unicode = function () {\n    // expect iso8859 input, unicode output\n    var e = URI.encode;\n    var d = URI.decode;\n    URI.encode = strictEncodeURIComponent;\n    URI.decode = unescape;\n\n    try {\n      this.normalize();\n    } finally {\n      URI.encode = e;\n      URI.decode = d;\n    }\n\n    return this;\n  };\n\n  p.readable = function () {\n    var uri = this.clone(); // removing username, password, because they shouldn't be displayed according to RFC 3986\n\n    uri.username('').password('').normalize();\n    var t = '';\n\n    if (uri._parts.protocol) {\n      t += uri._parts.protocol + '://';\n    }\n\n    if (uri._parts.hostname) {\n      if (uri.is('punycode') && punycode) {\n        t += punycode.toUnicode(uri._parts.hostname);\n\n        if (uri._parts.port) {\n          t += ':' + uri._parts.port;\n        }\n      } else {\n        t += uri.host();\n      }\n    }\n\n    if (uri._parts.hostname && uri._parts.path && uri._parts.path.charAt(0) !== '/') {\n      t += '/';\n    }\n\n    t += uri.path(true);\n\n    if (uri._parts.query) {\n      var q = '';\n\n      for (var i = 0, qp = uri._parts.query.split('&'), l = qp.length; i < l; i++) {\n        var kv = (qp[i] || '').split('=');\n        q += '&' + URI.decodeQuery(kv[0], this._parts.escapeQuerySpace).replace(/&/g, '%26');\n\n        if (kv[1] !== undefined) {\n          q += '=' + URI.decodeQuery(kv[1], this._parts.escapeQuerySpace).replace(/&/g, '%26');\n        }\n      }\n\n      t += '?' + q.substring(1);\n    }\n\n    t += URI.decodeQuery(uri.hash(), true);\n    return t;\n  }; // resolving relative and absolute URLs\n\n\n  p.absoluteTo = function (base) {\n    var resolved = this.clone();\n    var properties = ['protocol', 'username', 'password', 'hostname', 'port'];\n    var basedir, i, p;\n\n    if (this._parts.urn) {\n      throw new Error('URNs do not have any generally defined hierarchical components');\n    }\n\n    if (!(base instanceof URI)) {\n      base = new URI(base);\n    }\n\n    if (resolved._parts.protocol) {\n      // Directly returns even if this._parts.hostname is empty.\n      return resolved;\n    } else {\n      resolved._parts.protocol = base._parts.protocol;\n    }\n\n    if (this._parts.hostname) {\n      return resolved;\n    }\n\n    for (i = 0; p = properties[i]; i++) {\n      resolved._parts[p] = base._parts[p];\n    }\n\n    if (!resolved._parts.path) {\n      resolved._parts.path = base._parts.path;\n\n      if (!resolved._parts.query) {\n        resolved._parts.query = base._parts.query;\n      }\n    } else {\n      if (resolved._parts.path.substring(-2) === '..') {\n        resolved._parts.path += '/';\n      }\n\n      if (resolved.path().charAt(0) !== '/') {\n        basedir = base.directory();\n        basedir = basedir ? basedir : base.path().indexOf('/') === 0 ? '/' : '';\n        resolved._parts.path = (basedir ? basedir + '/' : '') + resolved._parts.path;\n        resolved.normalizePath();\n      }\n    }\n\n    resolved.build();\n    return resolved;\n  };\n\n  p.relativeTo = function (base) {\n    var relative = this.clone().normalize();\n    var relativeParts, baseParts, common, relativePath, basePath;\n\n    if (relative._parts.urn) {\n      throw new Error('URNs do not have any generally defined hierarchical components');\n    }\n\n    base = new URI(base).normalize();\n    relativeParts = relative._parts;\n    baseParts = base._parts;\n    relativePath = relative.path();\n    basePath = base.path();\n\n    if (relativePath.charAt(0) !== '/') {\n      throw new Error('URI is already relative');\n    }\n\n    if (basePath.charAt(0) !== '/') {\n      throw new Error('Cannot calculate a URI relative to another relative URI');\n    }\n\n    if (relativeParts.protocol === baseParts.protocol) {\n      relativeParts.protocol = null;\n    }\n\n    if (relativeParts.username !== baseParts.username || relativeParts.password !== baseParts.password) {\n      return relative.build();\n    }\n\n    if (relativeParts.protocol !== null || relativeParts.username !== null || relativeParts.password !== null) {\n      return relative.build();\n    }\n\n    if (relativeParts.hostname === baseParts.hostname && relativeParts.port === baseParts.port) {\n      relativeParts.hostname = null;\n      relativeParts.port = null;\n    } else {\n      return relative.build();\n    }\n\n    if (relativePath === basePath) {\n      relativeParts.path = '';\n      return relative.build();\n    } // determine common sub path\n\n\n    common = URI.commonPath(relativePath, basePath); // If the paths have nothing in common, return a relative URL with the absolute path.\n\n    if (!common) {\n      return relative.build();\n    }\n\n    var parents = baseParts.path.substring(common.length).replace(/[^\\/]*$/, '').replace(/.*?\\//g, '../');\n    relativeParts.path = parents + relativeParts.path.substring(common.length) || './';\n    return relative.build();\n  }; // comparing URIs\n\n\n  p.equals = function (uri) {\n    var one = this.clone();\n    var two = new URI(uri);\n    var one_map = {};\n    var two_map = {};\n    var checked = {};\n    var one_query, two_query, key;\n    one.normalize();\n    two.normalize(); // exact match\n\n    if (one.toString() === two.toString()) {\n      return true;\n    } // extract query string\n\n\n    one_query = one.query();\n    two_query = two.query();\n    one.query('');\n    two.query(''); // definitely not equal if not even non-query parts match\n\n    if (one.toString() !== two.toString()) {\n      return false;\n    } // query parameters have the same length, even if they're permuted\n\n\n    if (one_query.length !== two_query.length) {\n      return false;\n    }\n\n    one_map = URI.parseQuery(one_query, this._parts.escapeQuerySpace);\n    two_map = URI.parseQuery(two_query, this._parts.escapeQuerySpace);\n\n    for (key in one_map) {\n      if (hasOwn.call(one_map, key)) {\n        if (!isArray(one_map[key])) {\n          if (one_map[key] !== two_map[key]) {\n            return false;\n          }\n        } else if (!arraysEqual(one_map[key], two_map[key])) {\n          return false;\n        }\n\n        checked[key] = true;\n      }\n    }\n\n    for (key in two_map) {\n      if (hasOwn.call(two_map, key)) {\n        if (!checked[key]) {\n          // two contains a parameter not present in one\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }; // state\n\n\n  p.preventInvalidHostname = function (v) {\n    this._parts.preventInvalidHostname = !!v;\n    return this;\n  };\n\n  p.duplicateQueryParameters = function (v) {\n    this._parts.duplicateQueryParameters = !!v;\n    return this;\n  };\n\n  p.escapeQuerySpace = function (v) {\n    this._parts.escapeQuerySpace = !!v;\n    return this;\n  };\n\n  return URI;\n});","map":{"version":3,"sources":["/home/waleed/Desktop/MintWebsites/Mint-Nfts-dapp/node_modules/urijs/src/URI.js"],"names":["root","factory","module","exports","require","define","amd","URI","punycode","IPv6","SecondLevelDomains","SLD","_URI","url","base","_urlSupplied","arguments","length","_baseSupplied","undefined","TypeError","location","href","absoluteTo","isInteger","value","test","version","p","prototype","hasOwn","Object","hasOwnProperty","escapeRegEx","string","replace","getType","String","toString","call","slice","isArray","obj","filterArrayValues","data","lookup","i","_match","splice","arrayContains","list","_type","match","arraysEqual","one","two","sort","l","trimSlashes","text","trim_expression","_parts","protocol","username","password","hostname","urn","port","path","query","fragment","preventInvalidHostname","duplicateQueryParameters","escapeQuerySpace","protocol_expression","idn_expression","punycode_expression","ip4_expression","ip6_expression","find_uri_expression","findUri","start","end","trim","parens","leading_whitespace_expression","defaultPorts","http","https","ftp","gopher","ws","wss","hostProtocols","invalid_hostname_characters","domAttributes","getDomAttribute","node","nodeName","toLowerCase","type","escapeForDumbFirefox36","escape","strictEncodeURIComponent","encodeURIComponent","encode","decode","decodeURIComponent","iso8859","unescape","unicode","characters","pathname","expression","map","reserved","urnpath","encodeQuery","escaped","decodeQuery","e","_part","generateAccessor","_group","c","generateSegmentedPathFunction","_sep","_codingFuncName","_innerCodingFuncName","actualCodingFunc","segments","split","join","decodePath","decodeUrnPath","recodePath","recodeUrnPath","encodeReserved","parse","parts","pos","indexOf","substring","parseAuthority","parseHost","bracketPos","t","charAt","firstColon","firstSlash","nextColon","ensureValidHostname","ensureValidPort","parseUserinfo","_string","firstBackSlash","lastIndexOf","shift","parseQuery","items","splits","v","name","push","build","requireAbsolutePath","buildAuthority","buildHost","buildUserinfo","buildQuery","unique","key","buildQueryParameter","addQuery","concat","setQuery","removeQuery","hasQuery","withinArray","_key","_booly","Boolean","op","joinPaths","input","nonEmptySegments","_segments","segment","s","uri","normalize","commonPath","Math","min","withinString","callback","options","_start","_end","_trim","_parens","_attributeOpen","lastIndex","exec","index","ignoreHtml","attributeOpen","max","search","parensEnd","parensMatch","parensMatchEnd","ignore","result","hasHostname","hasProtocol","rejectEmptyHostname","toASCII","Number","noConflict","removeAll","unconflicted","URITemplate","deferBuild","_deferred_build","clone","valueOf","generateSimpleAccessor","generatePrefixAccessor","hash","res","_object","attribute","src","is","what","ip","ip4","ip6","sld","idn","relative","has","_protocol","_port","_hostname","scheme","x","origin","authority","host","userinfo","resource","subdomain","domain","sub","RegExp","tld","get","ReferenceError","directory","filename","decodePathSegment","mutatedDirectory","normalizePath","suffix","separator","absolute","Error","pop","unshift","segmentCoded","q","setSearch","addSearch","removeSearch","hasSearch","normalizeProtocol","normalizeQuery","normalizeFragment","normalizeHostname","normalizePort","best","_path","_was_relative","_leadingParents","_parent","_pos","normalizePathname","normalizeSearch","normalizeHash","d","readable","toUnicode","qp","kv","resolved","properties","basedir","relativeTo","relativeParts","baseParts","common","relativePath","basePath","parents","equals","one_map","two_map","checked","one_query","two_query"],"mappings":"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","sourcesContent":["/*!\n * URI.js - Mutating URLs\n *\n * Version: 1.19.10\n *\n * Author: Rodney Rehm\n * Web: http://medialize.github.io/URI.js/\n *\n * Licensed under\n *   MIT License http://www.opensource.org/licenses/mit-license\n *\n */\n(function (root, factory) {\n  'use strict';\n  // https://github.com/umdjs/umd/blob/master/returnExports.js\n  if (typeof module === 'object' && module.exports) {\n    // Node\n    module.exports = factory(require('./punycode'), require('./IPv6'), require('./SecondLevelDomains'));\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['./punycode', './IPv6', './SecondLevelDomains'], factory);\n  } else {\n    // Browser globals (root is window)\n    root.URI = factory(root.punycode, root.IPv6, root.SecondLevelDomains, root);\n  }\n}(this, function (punycode, IPv6, SLD, root) {\n  'use strict';\n  /*global location, escape, unescape */\n  // FIXME: v2.0.0 renamce non-camelCase properties to uppercase\n  /*jshint camelcase: false */\n\n  // save current URI variable, if any\n  var _URI = root && root.URI;\n\n  function URI(url, base) {\n    var _urlSupplied = arguments.length >= 1;\n    var _baseSupplied = arguments.length >= 2;\n\n    // Allow instantiation without the 'new' keyword\n    if (!(this instanceof URI)) {\n      if (_urlSupplied) {\n        if (_baseSupplied) {\n          return new URI(url, base);\n        }\n\n        return new URI(url);\n      }\n\n      return new URI();\n    }\n\n    if (url === undefined) {\n      if (_urlSupplied) {\n        throw new TypeError('undefined is not a valid argument for URI');\n      }\n\n      if (typeof location !== 'undefined') {\n        url = location.href + '';\n      } else {\n        url = '';\n      }\n    }\n\n    if (url === null) {\n      if (_urlSupplied) {\n        throw new TypeError('null is not a valid argument for URI');\n      }\n    }\n\n    this.href(url);\n\n    // resolve to base according to http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#constructor\n    if (base !== undefined) {\n      return this.absoluteTo(base);\n    }\n\n    return this;\n  }\n\n  function isInteger(value) {\n    return /^[0-9]+$/.test(value);\n  }\n\n  URI.version = '1.19.10';\n\n  var p = URI.prototype;\n  var hasOwn = Object.prototype.hasOwnProperty;\n\n  function escapeRegEx(string) {\n    // https://github.com/medialize/URI.js/commit/85ac21783c11f8ccab06106dba9735a31a86924d#commitcomment-821963\n    return string.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n  }\n\n  function getType(value) {\n    // IE8 doesn't return [Object Undefined] but [Object Object] for undefined value\n    if (value === undefined) {\n      return 'Undefined';\n    }\n\n    return String(Object.prototype.toString.call(value)).slice(8, -1);\n  }\n\n  function isArray(obj) {\n    return getType(obj) === 'Array';\n  }\n\n  function filterArrayValues(data, value) {\n    var lookup = {};\n    var i, length;\n\n    if (getType(value) === 'RegExp') {\n      lookup = null;\n    } else if (isArray(value)) {\n      for (i = 0, length = value.length; i < length; i++) {\n        lookup[value[i]] = true;\n      }\n    } else {\n      lookup[value] = true;\n    }\n\n    for (i = 0, length = data.length; i < length; i++) {\n      /*jshint laxbreak: true */\n      var _match = lookup && lookup[data[i]] !== undefined\n        || !lookup && value.test(data[i]);\n      /*jshint laxbreak: false */\n      if (_match) {\n        data.splice(i, 1);\n        length--;\n        i--;\n      }\n    }\n\n    return data;\n  }\n\n  function arrayContains(list, value) {\n    var i, length;\n\n    // value may be string, number, array, regexp\n    if (isArray(value)) {\n      // Note: this can be optimized to O(n) (instead of current O(m * n))\n      for (i = 0, length = value.length; i < length; i++) {\n        if (!arrayContains(list, value[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    var _type = getType(value);\n    for (i = 0, length = list.length; i < length; i++) {\n      if (_type === 'RegExp') {\n        if (typeof list[i] === 'string' && list[i].match(value)) {\n          return true;\n        }\n      } else if (list[i] === value) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function arraysEqual(one, two) {\n    if (!isArray(one) || !isArray(two)) {\n      return false;\n    }\n\n    // arrays can't be equal if they have different amount of content\n    if (one.length !== two.length) {\n      return false;\n    }\n\n    one.sort();\n    two.sort();\n\n    for (var i = 0, l = one.length; i < l; i++) {\n      if (one[i] !== two[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function trimSlashes(text) {\n    var trim_expression = /^\\/+|\\/+$/g;\n    return text.replace(trim_expression, '');\n  }\n\n  URI._parts = function() {\n    return {\n      protocol: null,\n      username: null,\n      password: null,\n      hostname: null,\n      urn: null,\n      port: null,\n      path: null,\n      query: null,\n      fragment: null,\n      // state\n      preventInvalidHostname: URI.preventInvalidHostname,\n      duplicateQueryParameters: URI.duplicateQueryParameters,\n      escapeQuerySpace: URI.escapeQuerySpace\n    };\n  };\n  // state: throw on invalid hostname\n  // see https://github.com/medialize/URI.js/pull/345\n  // and https://github.com/medialize/URI.js/issues/354\n  URI.preventInvalidHostname = false;\n  // state: allow duplicate query parameters (a=1&a=1)\n  URI.duplicateQueryParameters = false;\n  // state: replaces + with %20 (space in query strings)\n  URI.escapeQuerySpace = true;\n  // static properties\n  URI.protocol_expression = /^[a-z][a-z0-9.+-]*$/i;\n  URI.idn_expression = /[^a-z0-9\\._-]/i;\n  URI.punycode_expression = /(xn--)/i;\n  // well, 333.444.555.666 matches, but it sure ain't no IPv4 - do we care?\n  URI.ip4_expression = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;\n  // credits to Rich Brown\n  // source: http://forums.intermapper.com/viewtopic.php?p=1096#1096\n  // specification: http://www.ietf.org/rfc/rfc4291.txt\n  URI.ip6_expression = /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/;\n  // expression used is \"gruber revised\" (@gruber v2) determined to be the\n  // best solution in a regex-golf we did a couple of ages ago at\n  // * http://mathiasbynens.be/demo/url-regex\n  // * http://rodneyrehm.de/t/url-regex.html\n  URI.find_uri_expression = /\\b((?:[a-z][\\w-]+:(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:'\".,<>?«»“”‘’]))/ig;\n  URI.findUri = {\n    // valid \"scheme://\" or \"www.\"\n    start: /\\b(?:([a-z][a-z0-9.+-]*:\\/\\/)|www\\.)/gi,\n    // everything up to the next whitespace\n    end: /[\\s\\r\\n]|$/,\n    // trim trailing punctuation captured by end RegExp\n    trim: /[`!()\\[\\]{};:'\".,<>?«»“”„‘’]+$/,\n    // balanced parens inclusion (), [], {}, <>\n    parens: /(\\([^\\)]*\\)|\\[[^\\]]*\\]|\\{[^}]*\\}|<[^>]*>)/g,\n  };\n  URI.leading_whitespace_expression = /^[\\x00-\\x20\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]+/\n  // http://www.iana.org/assignments/uri-schemes.html\n  // http://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers#Well-known_ports\n  URI.defaultPorts = {\n    http: '80',\n    https: '443',\n    ftp: '21',\n    gopher: '70',\n    ws: '80',\n    wss: '443'\n  };\n  // list of protocols which always require a hostname\n  URI.hostProtocols = [\n    'http',\n    'https'\n  ];\n\n  // allowed hostname characters according to RFC 3986\n  // ALPHA DIGIT \"-\" \".\" \"_\" \"~\" \"!\" \"$\" \"&\" \"'\" \"(\" \")\" \"*\" \"+\" \",\" \";\" \"=\" %encoded\n  // I've never seen a (non-IDN) hostname other than: ALPHA DIGIT . - _\n  URI.invalid_hostname_characters = /[^a-zA-Z0-9\\.\\-:_]/;\n  // map DOM Elements to their URI attribute\n  URI.domAttributes = {\n    'a': 'href',\n    'blockquote': 'cite',\n    'link': 'href',\n    'base': 'href',\n    'script': 'src',\n    'form': 'action',\n    'img': 'src',\n    'area': 'href',\n    'iframe': 'src',\n    'embed': 'src',\n    'source': 'src',\n    'track': 'src',\n    'input': 'src', // but only if type=\"image\"\n    'audio': 'src',\n    'video': 'src'\n  };\n  URI.getDomAttribute = function(node) {\n    if (!node || !node.nodeName) {\n      return undefined;\n    }\n\n    var nodeName = node.nodeName.toLowerCase();\n    // <input> should only expose src for type=\"image\"\n    if (nodeName === 'input' && node.type !== 'image') {\n      return undefined;\n    }\n\n    return URI.domAttributes[nodeName];\n  };\n\n  function escapeForDumbFirefox36(value) {\n    // https://github.com/medialize/URI.js/issues/91\n    return escape(value);\n  }\n\n  // encoding / decoding according to RFC3986\n  function strictEncodeURIComponent(string) {\n    // see https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/encodeURIComponent\n    return encodeURIComponent(string)\n      .replace(/[!'()*]/g, escapeForDumbFirefox36)\n      .replace(/\\*/g, '%2A');\n  }\n  URI.encode = strictEncodeURIComponent;\n  URI.decode = decodeURIComponent;\n  URI.iso8859 = function() {\n    URI.encode = escape;\n    URI.decode = unescape;\n  };\n  URI.unicode = function() {\n    URI.encode = strictEncodeURIComponent;\n    URI.decode = decodeURIComponent;\n  };\n  URI.characters = {\n    pathname: {\n      encode: {\n        // RFC3986 2.1: For consistency, URI producers and normalizers should\n        // use uppercase hexadecimal digits for all percent-encodings.\n        expression: /%(24|26|2B|2C|3B|3D|3A|40)/ig,\n        map: {\n          // -._~!'()*\n          '%24': '$',\n          '%26': '&',\n          '%2B': '+',\n          '%2C': ',',\n          '%3B': ';',\n          '%3D': '=',\n          '%3A': ':',\n          '%40': '@'\n        }\n      },\n      decode: {\n        expression: /[\\/\\?#]/g,\n        map: {\n          '/': '%2F',\n          '?': '%3F',\n          '#': '%23'\n        }\n      }\n    },\n    reserved: {\n      encode: {\n        // RFC3986 2.1: For consistency, URI producers and normalizers should\n        // use uppercase hexadecimal digits for all percent-encodings.\n        expression: /%(21|23|24|26|27|28|29|2A|2B|2C|2F|3A|3B|3D|3F|40|5B|5D)/ig,\n        map: {\n          // gen-delims\n          '%3A': ':',\n          '%2F': '/',\n          '%3F': '?',\n          '%23': '#',\n          '%5B': '[',\n          '%5D': ']',\n          '%40': '@',\n          // sub-delims\n          '%21': '!',\n          '%24': '$',\n          '%26': '&',\n          '%27': '\\'',\n          '%28': '(',\n          '%29': ')',\n          '%2A': '*',\n          '%2B': '+',\n          '%2C': ',',\n          '%3B': ';',\n          '%3D': '='\n        }\n      }\n    },\n    urnpath: {\n      // The characters under `encode` are the characters called out by RFC 2141 as being acceptable\n      // for usage in a URN. RFC2141 also calls out \"-\", \".\", and \"_\" as acceptable characters, but\n      // these aren't encoded by encodeURIComponent, so we don't have to call them out here. Also\n      // note that the colon character is not featured in the encoding map; this is because URI.js\n      // gives the colons in URNs semantic meaning as the delimiters of path segements, and so it\n      // should not appear unencoded in a segment itself.\n      // See also the note above about RFC3986 and capitalalized hex digits.\n      encode: {\n        expression: /%(21|24|27|28|29|2A|2B|2C|3B|3D|40)/ig,\n        map: {\n          '%21': '!',\n          '%24': '$',\n          '%27': '\\'',\n          '%28': '(',\n          '%29': ')',\n          '%2A': '*',\n          '%2B': '+',\n          '%2C': ',',\n          '%3B': ';',\n          '%3D': '=',\n          '%40': '@'\n        }\n      },\n      // These characters are the characters called out by RFC2141 as \"reserved\" characters that\n      // should never appear in a URN, plus the colon character (see note above).\n      decode: {\n        expression: /[\\/\\?#:]/g,\n        map: {\n          '/': '%2F',\n          '?': '%3F',\n          '#': '%23',\n          ':': '%3A'\n        }\n      }\n    }\n  };\n  URI.encodeQuery = function(string, escapeQuerySpace) {\n    var escaped = URI.encode(string + '');\n    if (escapeQuerySpace === undefined) {\n      escapeQuerySpace = URI.escapeQuerySpace;\n    }\n\n    return escapeQuerySpace ? escaped.replace(/%20/g, '+') : escaped;\n  };\n  URI.decodeQuery = function(string, escapeQuerySpace) {\n    string += '';\n    if (escapeQuerySpace === undefined) {\n      escapeQuerySpace = URI.escapeQuerySpace;\n    }\n\n    try {\n      return URI.decode(escapeQuerySpace ? string.replace(/\\+/g, '%20') : string);\n    } catch(e) {\n      // we're not going to mess with weird encodings,\n      // give up and return the undecoded original string\n      // see https://github.com/medialize/URI.js/issues/87\n      // see https://github.com/medialize/URI.js/issues/92\n      return string;\n    }\n  };\n  // generate encode/decode path functions\n  var _parts = {'encode':'encode', 'decode':'decode'};\n  var _part;\n  var generateAccessor = function(_group, _part) {\n    return function(string) {\n      try {\n        return URI[_part](string + '').replace(URI.characters[_group][_part].expression, function(c) {\n          return URI.characters[_group][_part].map[c];\n        });\n      } catch (e) {\n        // we're not going to mess with weird encodings,\n        // give up and return the undecoded original string\n        // see https://github.com/medialize/URI.js/issues/87\n        // see https://github.com/medialize/URI.js/issues/92\n        return string;\n      }\n    };\n  };\n\n  for (_part in _parts) {\n    URI[_part + 'PathSegment'] = generateAccessor('pathname', _parts[_part]);\n    URI[_part + 'UrnPathSegment'] = generateAccessor('urnpath', _parts[_part]);\n  }\n\n  var generateSegmentedPathFunction = function(_sep, _codingFuncName, _innerCodingFuncName) {\n    return function(string) {\n      // Why pass in names of functions, rather than the function objects themselves? The\n      // definitions of some functions (but in particular, URI.decode) will occasionally change due\n      // to URI.js having ISO8859 and Unicode modes. Passing in the name and getting it will ensure\n      // that the functions we use here are \"fresh\".\n      var actualCodingFunc;\n      if (!_innerCodingFuncName) {\n        actualCodingFunc = URI[_codingFuncName];\n      } else {\n        actualCodingFunc = function(string) {\n          return URI[_codingFuncName](URI[_innerCodingFuncName](string));\n        };\n      }\n\n      var segments = (string + '').split(_sep);\n\n      for (var i = 0, length = segments.length; i < length; i++) {\n        segments[i] = actualCodingFunc(segments[i]);\n      }\n\n      return segments.join(_sep);\n    };\n  };\n\n  // This takes place outside the above loop because we don't want, e.g., encodeUrnPath functions.\n  URI.decodePath = generateSegmentedPathFunction('/', 'decodePathSegment');\n  URI.decodeUrnPath = generateSegmentedPathFunction(':', 'decodeUrnPathSegment');\n  URI.recodePath = generateSegmentedPathFunction('/', 'encodePathSegment', 'decode');\n  URI.recodeUrnPath = generateSegmentedPathFunction(':', 'encodeUrnPathSegment', 'decode');\n\n  URI.encodeReserved = generateAccessor('reserved', 'encode');\n\n  URI.parse = function(string, parts) {\n    var pos;\n    if (!parts) {\n      parts = {\n        preventInvalidHostname: URI.preventInvalidHostname\n      };\n    }\n\n    string = string.replace(URI.leading_whitespace_expression, '')\n\n    // [protocol\"://\"[username[\":\"password]\"@\"]hostname[\":\"port]\"/\"?][path][\"?\"querystring][\"#\"fragment]\n\n    // extract fragment\n    pos = string.indexOf('#');\n    if (pos > -1) {\n      // escaping?\n      parts.fragment = string.substring(pos + 1) || null;\n      string = string.substring(0, pos);\n    }\n\n    // extract query\n    pos = string.indexOf('?');\n    if (pos > -1) {\n      // escaping?\n      parts.query = string.substring(pos + 1) || null;\n      string = string.substring(0, pos);\n    }\n\n    // slashes and backslashes have lost all meaning for the web protocols (https, http, wss, ws)\n    string = string.replace(/^(https?|ftp|wss?)?:+[/\\\\]*/i, '$1://');\n\n    // extract protocol\n    if (string.substring(0, 2) === '//') {\n      // relative-scheme\n      parts.protocol = null;\n      string = string.substring(2);\n      // extract \"user:pass@host:port\"\n      string = URI.parseAuthority(string, parts);\n    } else {\n      pos = string.indexOf(':');\n      if (pos > -1) {\n        parts.protocol = string.substring(0, pos) || null;\n        if (parts.protocol && !parts.protocol.match(URI.protocol_expression)) {\n          // : may be within the path\n          parts.protocol = undefined;\n        } else if (string.substring(pos + 1, pos + 3).replace(/\\\\/g, '/') === '//') {\n          string = string.substring(pos + 3);\n\n          // extract \"user:pass@host:port\"\n          string = URI.parseAuthority(string, parts);\n        } else {\n          string = string.substring(pos + 1);\n          parts.urn = true;\n        }\n      }\n    }\n\n    // what's left must be the path\n    parts.path = string;\n\n    // and we're done\n    return parts;\n  };\n  URI.parseHost = function(string, parts) {\n    if (!string) {\n      string = '';\n    }\n\n    // Copy chrome, IE, opera backslash-handling behavior.\n    // Back slashes before the query string get converted to forward slashes\n    // See: https://github.com/joyent/node/blob/386fd24f49b0e9d1a8a076592a404168faeecc34/lib/url.js#L115-L124\n    // See: https://code.google.com/p/chromium/issues/detail?id=25916\n    // https://github.com/medialize/URI.js/pull/233\n    string = string.replace(/\\\\/g, '/');\n\n    // extract host:port\n    var pos = string.indexOf('/');\n    var bracketPos;\n    var t;\n\n    if (pos === -1) {\n      pos = string.length;\n    }\n\n    if (string.charAt(0) === '[') {\n      // IPv6 host - http://tools.ietf.org/html/draft-ietf-6man-text-addr-representation-04#section-6\n      // I claim most client software breaks on IPv6 anyways. To simplify things, URI only accepts\n      // IPv6+port in the format [2001:db8::1]:80 (for the time being)\n      bracketPos = string.indexOf(']');\n      parts.hostname = string.substring(1, bracketPos) || null;\n      parts.port = string.substring(bracketPos + 2, pos) || null;\n      if (parts.port === '/') {\n        parts.port = null;\n      }\n    } else {\n      var firstColon = string.indexOf(':');\n      var firstSlash = string.indexOf('/');\n      var nextColon = string.indexOf(':', firstColon + 1);\n      if (nextColon !== -1 && (firstSlash === -1 || nextColon < firstSlash)) {\n        // IPv6 host contains multiple colons - but no port\n        // this notation is actually not allowed by RFC 3986, but we're a liberal parser\n        parts.hostname = string.substring(0, pos) || null;\n        parts.port = null;\n      } else {\n        t = string.substring(0, pos).split(':');\n        parts.hostname = t[0] || null;\n        parts.port = t[1] || null;\n      }\n    }\n\n    if (parts.hostname && string.substring(pos).charAt(0) !== '/') {\n      pos++;\n      string = '/' + string;\n    }\n\n    if (parts.preventInvalidHostname) {\n      URI.ensureValidHostname(parts.hostname, parts.protocol);\n    }\n\n    if (parts.port) {\n      URI.ensureValidPort(parts.port);\n    }\n\n    return string.substring(pos) || '/';\n  };\n  URI.parseAuthority = function(string, parts) {\n    string = URI.parseUserinfo(string, parts);\n    return URI.parseHost(string, parts);\n  };\n  URI.parseUserinfo = function(string, parts) {\n    // extract username:password\n    var _string = string\n    var firstBackSlash = string.indexOf('\\\\');\n    if (firstBackSlash !== -1) {\n      string = string.replace(/\\\\/g, '/')\n    }\n    var firstSlash = string.indexOf('/');\n    var pos = string.lastIndexOf('@', firstSlash > -1 ? firstSlash : string.length - 1);\n    var t;\n\n    // authority@ must come before /path or \\path\n    if (pos > -1 && (firstSlash === -1 || pos < firstSlash)) {\n      t = string.substring(0, pos).split(':');\n      parts.username = t[0] ? URI.decode(t[0]) : null;\n      t.shift();\n      parts.password = t[0] ? URI.decode(t.join(':')) : null;\n      string = _string.substring(pos + 1);\n    } else {\n      parts.username = null;\n      parts.password = null;\n    }\n\n    return string;\n  };\n  URI.parseQuery = function(string, escapeQuerySpace) {\n    if (!string) {\n      return {};\n    }\n\n    // throw out the funky business - \"?\"[name\"=\"value\"&\"]+\n    string = string.replace(/&+/g, '&').replace(/^\\?*&*|&+$/g, '');\n\n    if (!string) {\n      return {};\n    }\n\n    var items = {};\n    var splits = string.split('&');\n    var length = splits.length;\n    var v, name, value;\n\n    for (var i = 0; i < length; i++) {\n      v = splits[i].split('=');\n      name = URI.decodeQuery(v.shift(), escapeQuerySpace);\n      // no \"=\" is null according to http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#collect-url-parameters\n      value = v.length ? URI.decodeQuery(v.join('='), escapeQuerySpace) : null;\n\n      if (name === '__proto__') {\n        // ignore attempt at exploiting JavaScript internals\n        continue;\n      } else if (hasOwn.call(items, name)) {\n        if (typeof items[name] === 'string' || items[name] === null) {\n          items[name] = [items[name]];\n        }\n\n        items[name].push(value);\n      } else {\n        items[name] = value;\n      }\n    }\n\n    return items;\n  };\n\n  URI.build = function(parts) {\n    var t = '';\n    var requireAbsolutePath = false\n\n    if (parts.protocol) {\n      t += parts.protocol + ':';\n    }\n\n    if (!parts.urn && (t || parts.hostname)) {\n      t += '//';\n      requireAbsolutePath = true\n    }\n\n    t += (URI.buildAuthority(parts) || '');\n\n    if (typeof parts.path === 'string') {\n      if (parts.path.charAt(0) !== '/' && requireAbsolutePath) {\n        t += '/';\n      }\n\n      t += parts.path;\n    }\n\n    if (typeof parts.query === 'string' && parts.query) {\n      t += '?' + parts.query;\n    }\n\n    if (typeof parts.fragment === 'string' && parts.fragment) {\n      t += '#' + parts.fragment;\n    }\n    return t;\n  };\n  URI.buildHost = function(parts) {\n    var t = '';\n\n    if (!parts.hostname) {\n      return '';\n    } else if (URI.ip6_expression.test(parts.hostname)) {\n      t += '[' + parts.hostname + ']';\n    } else {\n      t += parts.hostname;\n    }\n\n    if (parts.port) {\n      t += ':' + parts.port;\n    }\n\n    return t;\n  };\n  URI.buildAuthority = function(parts) {\n    return URI.buildUserinfo(parts) + URI.buildHost(parts);\n  };\n  URI.buildUserinfo = function(parts) {\n    var t = '';\n\n    if (parts.username) {\n      t += URI.encode(parts.username);\n    }\n\n    if (parts.password) {\n      t += ':' + URI.encode(parts.password);\n    }\n\n    if (t) {\n      t += '@';\n    }\n\n    return t;\n  };\n  URI.buildQuery = function(data, duplicateQueryParameters, escapeQuerySpace) {\n    // according to http://tools.ietf.org/html/rfc3986 or http://labs.apache.org/webarch/uri/rfc/rfc3986.html\n    // being »-._~!$&'()*+,;=:@/?« %HEX and alnum are allowed\n    // the RFC explicitly states ?/foo being a valid use case, no mention of parameter syntax!\n    // URI.js treats the query string as being application/x-www-form-urlencoded\n    // see http://www.w3.org/TR/REC-html40/interact/forms.html#form-content-type\n\n    var t = '';\n    var unique, key, i, length;\n    for (key in data) {\n      if (key === '__proto__') {\n        // ignore attempt at exploiting JavaScript internals\n        continue;\n      } else if (hasOwn.call(data, key)) {\n        if (isArray(data[key])) {\n          unique = {};\n          for (i = 0, length = data[key].length; i < length; i++) {\n            if (data[key][i] !== undefined && unique[data[key][i] + ''] === undefined) {\n              t += '&' + URI.buildQueryParameter(key, data[key][i], escapeQuerySpace);\n              if (duplicateQueryParameters !== true) {\n                unique[data[key][i] + ''] = true;\n              }\n            }\n          }\n        } else if (data[key] !== undefined) {\n          t += '&' + URI.buildQueryParameter(key, data[key], escapeQuerySpace);\n        }\n      }\n    }\n\n    return t.substring(1);\n  };\n  URI.buildQueryParameter = function(name, value, escapeQuerySpace) {\n    // http://www.w3.org/TR/REC-html40/interact/forms.html#form-content-type -- application/x-www-form-urlencoded\n    // don't append \"=\" for null values, according to http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#url-parameter-serialization\n    return URI.encodeQuery(name, escapeQuerySpace) + (value !== null ? '=' + URI.encodeQuery(value, escapeQuerySpace) : '');\n  };\n\n  URI.addQuery = function(data, name, value) {\n    if (typeof name === 'object') {\n      for (var key in name) {\n        if (hasOwn.call(name, key)) {\n          URI.addQuery(data, key, name[key]);\n        }\n      }\n    } else if (typeof name === 'string') {\n      if (data[name] === undefined) {\n        data[name] = value;\n        return;\n      } else if (typeof data[name] === 'string') {\n        data[name] = [data[name]];\n      }\n\n      if (!isArray(value)) {\n        value = [value];\n      }\n\n      data[name] = (data[name] || []).concat(value);\n    } else {\n      throw new TypeError('URI.addQuery() accepts an object, string as the name parameter');\n    }\n  };\n\n  URI.setQuery = function(data, name, value) {\n    if (typeof name === 'object') {\n      for (var key in name) {\n        if (hasOwn.call(name, key)) {\n          URI.setQuery(data, key, name[key]);\n        }\n      }\n    } else if (typeof name === 'string') {\n      data[name] = value === undefined ? null : value;\n    } else {\n      throw new TypeError('URI.setQuery() accepts an object, string as the name parameter');\n    }\n  };\n\n  URI.removeQuery = function(data, name, value) {\n    var i, length, key;\n\n    if (isArray(name)) {\n      for (i = 0, length = name.length; i < length; i++) {\n        data[name[i]] = undefined;\n      }\n    } else if (getType(name) === 'RegExp') {\n      for (key in data) {\n        if (name.test(key)) {\n          data[key] = undefined;\n        }\n      }\n    } else if (typeof name === 'object') {\n      for (key in name) {\n        if (hasOwn.call(name, key)) {\n          URI.removeQuery(data, key, name[key]);\n        }\n      }\n    } else if (typeof name === 'string') {\n      if (value !== undefined) {\n        if (getType(value) === 'RegExp') {\n          if (!isArray(data[name]) && value.test(data[name])) {\n            data[name] = undefined;\n          } else {\n            data[name] = filterArrayValues(data[name], value);\n          }\n        } else if (data[name] === String(value) && (!isArray(value) || value.length === 1)) {\n          data[name] = undefined;\n        } else if (isArray(data[name])) {\n          data[name] = filterArrayValues(data[name], value);\n        }\n      } else {\n        data[name] = undefined;\n      }\n    } else {\n      throw new TypeError('URI.removeQuery() accepts an object, string, RegExp as the first parameter');\n    }\n  };\n  URI.hasQuery = function(data, name, value, withinArray) {\n    switch (getType(name)) {\n      case 'String':\n        // Nothing to do here\n        break;\n\n      case 'RegExp':\n        for (var key in data) {\n          if (hasOwn.call(data, key)) {\n            if (name.test(key) && (value === undefined || URI.hasQuery(data, key, value))) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n\n      case 'Object':\n        for (var _key in name) {\n          if (hasOwn.call(name, _key)) {\n            if (!URI.hasQuery(data, _key, name[_key])) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n\n      default:\n        throw new TypeError('URI.hasQuery() accepts a string, regular expression or object as the name parameter');\n    }\n\n    switch (getType(value)) {\n      case 'Undefined':\n        // true if exists (but may be empty)\n        return name in data; // data[name] !== undefined;\n\n      case 'Boolean':\n        // true if exists and non-empty\n        var _booly = Boolean(isArray(data[name]) ? data[name].length : data[name]);\n        return value === _booly;\n\n      case 'Function':\n        // allow complex comparison\n        return !!value(data[name], name, data);\n\n      case 'Array':\n        if (!isArray(data[name])) {\n          return false;\n        }\n\n        var op = withinArray ? arrayContains : arraysEqual;\n        return op(data[name], value);\n\n      case 'RegExp':\n        if (!isArray(data[name])) {\n          return Boolean(data[name] && data[name].match(value));\n        }\n\n        if (!withinArray) {\n          return false;\n        }\n\n        return arrayContains(data[name], value);\n\n      case 'Number':\n        value = String(value);\n        /* falls through */\n      case 'String':\n        if (!isArray(data[name])) {\n          return data[name] === value;\n        }\n\n        if (!withinArray) {\n          return false;\n        }\n\n        return arrayContains(data[name], value);\n\n      default:\n        throw new TypeError('URI.hasQuery() accepts undefined, boolean, string, number, RegExp, Function as the value parameter');\n    }\n  };\n\n\n  URI.joinPaths = function() {\n    var input = [];\n    var segments = [];\n    var nonEmptySegments = 0;\n\n    for (var i = 0; i < arguments.length; i++) {\n      var url = new URI(arguments[i]);\n      input.push(url);\n      var _segments = url.segment();\n      for (var s = 0; s < _segments.length; s++) {\n        if (typeof _segments[s] === 'string') {\n          segments.push(_segments[s]);\n        }\n\n        if (_segments[s]) {\n          nonEmptySegments++;\n        }\n      }\n    }\n\n    if (!segments.length || !nonEmptySegments) {\n      return new URI('');\n    }\n\n    var uri = new URI('').segment(segments);\n\n    if (input[0].path() === '' || input[0].path().slice(0, 1) === '/') {\n      uri.path('/' + uri.path());\n    }\n\n    return uri.normalize();\n  };\n\n  URI.commonPath = function(one, two) {\n    var length = Math.min(one.length, two.length);\n    var pos;\n\n    // find first non-matching character\n    for (pos = 0; pos < length; pos++) {\n      if (one.charAt(pos) !== two.charAt(pos)) {\n        pos--;\n        break;\n      }\n    }\n\n    if (pos < 1) {\n      return one.charAt(0) === two.charAt(0) && one.charAt(0) === '/' ? '/' : '';\n    }\n\n    // revert to last /\n    if (one.charAt(pos) !== '/' || two.charAt(pos) !== '/') {\n      pos = one.substring(0, pos).lastIndexOf('/');\n    }\n\n    return one.substring(0, pos + 1);\n  };\n\n  URI.withinString = function(string, callback, options) {\n    options || (options = {});\n    var _start = options.start || URI.findUri.start;\n    var _end = options.end || URI.findUri.end;\n    var _trim = options.trim || URI.findUri.trim;\n    var _parens = options.parens || URI.findUri.parens;\n    var _attributeOpen = /[a-z0-9-]=[\"']?$/i;\n\n    _start.lastIndex = 0;\n    while (true) {\n      var match = _start.exec(string);\n      if (!match) {\n        break;\n      }\n\n      var start = match.index;\n      if (options.ignoreHtml) {\n        // attribut(e=[\"']?$)\n        var attributeOpen = string.slice(Math.max(start - 3, 0), start);\n        if (attributeOpen && _attributeOpen.test(attributeOpen)) {\n          continue;\n        }\n      }\n\n      var end = start + string.slice(start).search(_end);\n      var slice = string.slice(start, end);\n      // make sure we include well balanced parens\n      var parensEnd = -1;\n      while (true) {\n        var parensMatch = _parens.exec(slice);\n        if (!parensMatch) {\n          break;\n        }\n\n        var parensMatchEnd = parensMatch.index + parensMatch[0].length;\n        parensEnd = Math.max(parensEnd, parensMatchEnd);\n      }\n\n      if (parensEnd > -1) {\n        slice = slice.slice(0, parensEnd) + slice.slice(parensEnd).replace(_trim, '');\n      } else {\n        slice = slice.replace(_trim, '');\n      }\n\n      if (slice.length <= match[0].length) {\n        // the extract only contains the starting marker of a URI,\n        // e.g. \"www\" or \"http://\"\n        continue;\n      }\n\n      if (options.ignore && options.ignore.test(slice)) {\n        continue;\n      }\n\n      end = start + slice.length;\n      var result = callback(slice, start, end, string);\n      if (result === undefined) {\n        _start.lastIndex = end;\n        continue;\n      }\n\n      result = String(result);\n      string = string.slice(0, start) + result + string.slice(end);\n      _start.lastIndex = start + result.length;\n    }\n\n    _start.lastIndex = 0;\n    return string;\n  };\n\n  URI.ensureValidHostname = function(v, protocol) {\n    // Theoretically URIs allow percent-encoding in Hostnames (according to RFC 3986)\n    // they are not part of DNS and therefore ignored by URI.js\n\n    var hasHostname = !!v; // not null and not an empty string\n    var hasProtocol = !!protocol;\n    var rejectEmptyHostname = false;\n\n    if (hasProtocol) {\n      rejectEmptyHostname = arrayContains(URI.hostProtocols, protocol);\n    }\n\n    if (rejectEmptyHostname && !hasHostname) {\n      throw new TypeError('Hostname cannot be empty, if protocol is ' + protocol);\n    } else if (v && v.match(URI.invalid_hostname_characters)) {\n      // test punycode\n      if (!punycode) {\n        throw new TypeError('Hostname \"' + v + '\" contains characters other than [A-Z0-9.-:_] and Punycode.js is not available');\n      }\n      if (punycode.toASCII(v).match(URI.invalid_hostname_characters)) {\n        throw new TypeError('Hostname \"' + v + '\" contains characters other than [A-Z0-9.-:_]');\n      }\n    }\n  };\n\n  URI.ensureValidPort = function (v) {\n    if (!v) {\n      return;\n    }\n\n    var port = Number(v);\n    if (isInteger(port) && (port > 0) && (port < 65536)) {\n      return;\n    }\n\n    throw new TypeError('Port \"' + v + '\" is not a valid port');\n  };\n\n  // noConflict\n  URI.noConflict = function(removeAll) {\n    if (removeAll) {\n      var unconflicted = {\n        URI: this.noConflict()\n      };\n\n      if (root.URITemplate && typeof root.URITemplate.noConflict === 'function') {\n        unconflicted.URITemplate = root.URITemplate.noConflict();\n      }\n\n      if (root.IPv6 && typeof root.IPv6.noConflict === 'function') {\n        unconflicted.IPv6 = root.IPv6.noConflict();\n      }\n\n      if (root.SecondLevelDomains && typeof root.SecondLevelDomains.noConflict === 'function') {\n        unconflicted.SecondLevelDomains = root.SecondLevelDomains.noConflict();\n      }\n\n      return unconflicted;\n    } else if (root.URI === this) {\n      root.URI = _URI;\n    }\n\n    return this;\n  };\n\n  p.build = function(deferBuild) {\n    if (deferBuild === true) {\n      this._deferred_build = true;\n    } else if (deferBuild === undefined || this._deferred_build) {\n      this._string = URI.build(this._parts);\n      this._deferred_build = false;\n    }\n\n    return this;\n  };\n\n  p.clone = function() {\n    return new URI(this);\n  };\n\n  p.valueOf = p.toString = function() {\n    return this.build(false)._string;\n  };\n\n\n  function generateSimpleAccessor(_part){\n    return function(v, build) {\n      if (v === undefined) {\n        return this._parts[_part] || '';\n      } else {\n        this._parts[_part] = v || null;\n        this.build(!build);\n        return this;\n      }\n    };\n  }\n\n  function generatePrefixAccessor(_part, _key){\n    return function(v, build) {\n      if (v === undefined) {\n        return this._parts[_part] || '';\n      } else {\n        if (v !== null) {\n          v = v + '';\n          if (v.charAt(0) === _key) {\n            v = v.substring(1);\n          }\n        }\n\n        this._parts[_part] = v;\n        this.build(!build);\n        return this;\n      }\n    };\n  }\n\n  p.protocol = generateSimpleAccessor('protocol');\n  p.username = generateSimpleAccessor('username');\n  p.password = generateSimpleAccessor('password');\n  p.hostname = generateSimpleAccessor('hostname');\n  p.port = generateSimpleAccessor('port');\n  p.query = generatePrefixAccessor('query', '?');\n  p.fragment = generatePrefixAccessor('fragment', '#');\n\n  p.search = function(v, build) {\n    var t = this.query(v, build);\n    return typeof t === 'string' && t.length ? ('?' + t) : t;\n  };\n  p.hash = function(v, build) {\n    var t = this.fragment(v, build);\n    return typeof t === 'string' && t.length ? ('#' + t) : t;\n  };\n\n  p.pathname = function(v, build) {\n    if (v === undefined || v === true) {\n      var res = this._parts.path || (this._parts.hostname ? '/' : '');\n      return v ? (this._parts.urn ? URI.decodeUrnPath : URI.decodePath)(res) : res;\n    } else {\n      if (this._parts.urn) {\n        this._parts.path = v ? URI.recodeUrnPath(v) : '';\n      } else {\n        this._parts.path = v ? URI.recodePath(v) : '/';\n      }\n      this.build(!build);\n      return this;\n    }\n  };\n  p.path = p.pathname;\n  p.href = function(href, build) {\n    var key;\n\n    if (href === undefined) {\n      return this.toString();\n    }\n\n    this._string = '';\n    this._parts = URI._parts();\n\n    var _URI = href instanceof URI;\n    var _object = typeof href === 'object' && (href.hostname || href.path || href.pathname);\n    if (href.nodeName) {\n      var attribute = URI.getDomAttribute(href);\n      href = href[attribute] || '';\n      _object = false;\n    }\n\n    // window.location is reported to be an object, but it's not the sort\n    // of object we're looking for:\n    // * location.protocol ends with a colon\n    // * location.query != object.search\n    // * location.hash != object.fragment\n    // simply serializing the unknown object should do the trick\n    // (for location, not for everything...)\n    if (!_URI && _object && href.pathname !== undefined) {\n      href = href.toString();\n    }\n\n    if (typeof href === 'string' || href instanceof String) {\n      this._parts = URI.parse(String(href), this._parts);\n    } else if (_URI || _object) {\n      var src = _URI ? href._parts : href;\n      for (key in src) {\n        if (key === 'query') { continue; }\n        if (hasOwn.call(this._parts, key)) {\n          this._parts[key] = src[key];\n        }\n      }\n      if (src.query) {\n        this.query(src.query, false);\n      }\n    } else {\n      throw new TypeError('invalid input');\n    }\n\n    this.build(!build);\n    return this;\n  };\n\n  // identification accessors\n  p.is = function(what) {\n    var ip = false;\n    var ip4 = false;\n    var ip6 = false;\n    var name = false;\n    var sld = false;\n    var idn = false;\n    var punycode = false;\n    var relative = !this._parts.urn;\n\n    if (this._parts.hostname) {\n      relative = false;\n      ip4 = URI.ip4_expression.test(this._parts.hostname);\n      ip6 = URI.ip6_expression.test(this._parts.hostname);\n      ip = ip4 || ip6;\n      name = !ip;\n      sld = name && SLD && SLD.has(this._parts.hostname);\n      idn = name && URI.idn_expression.test(this._parts.hostname);\n      punycode = name && URI.punycode_expression.test(this._parts.hostname);\n    }\n\n    switch (what.toLowerCase()) {\n      case 'relative':\n        return relative;\n\n      case 'absolute':\n        return !relative;\n\n      // hostname identification\n      case 'domain':\n      case 'name':\n        return name;\n\n      case 'sld':\n        return sld;\n\n      case 'ip':\n        return ip;\n\n      case 'ip4':\n      case 'ipv4':\n      case 'inet4':\n        return ip4;\n\n      case 'ip6':\n      case 'ipv6':\n      case 'inet6':\n        return ip6;\n\n      case 'idn':\n        return idn;\n\n      case 'url':\n        return !this._parts.urn;\n\n      case 'urn':\n        return !!this._parts.urn;\n\n      case 'punycode':\n        return punycode;\n    }\n\n    return null;\n  };\n\n  // component specific input validation\n  var _protocol = p.protocol;\n  var _port = p.port;\n  var _hostname = p.hostname;\n\n  p.protocol = function(v, build) {\n    if (v) {\n      // accept trailing ://\n      v = v.replace(/:(\\/\\/)?$/, '');\n\n      if (!v.match(URI.protocol_expression)) {\n        throw new TypeError('Protocol \"' + v + '\" contains characters other than [A-Z0-9.+-] or doesn\\'t start with [A-Z]');\n      }\n    }\n\n    return _protocol.call(this, v, build);\n  };\n  p.scheme = p.protocol;\n  p.port = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v !== undefined) {\n      if (v === 0) {\n        v = null;\n      }\n\n      if (v) {\n        v += '';\n        if (v.charAt(0) === ':') {\n          v = v.substring(1);\n        }\n\n        URI.ensureValidPort(v);\n      }\n    }\n    return _port.call(this, v, build);\n  };\n  p.hostname = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v !== undefined) {\n      var x = { preventInvalidHostname: this._parts.preventInvalidHostname };\n      var res = URI.parseHost(v, x);\n      if (res !== '/') {\n        throw new TypeError('Hostname \"' + v + '\" contains characters other than [A-Z0-9.-]');\n      }\n\n      v = x.hostname;\n      if (this._parts.preventInvalidHostname) {\n        URI.ensureValidHostname(v, this._parts.protocol);\n      }\n    }\n\n    return _hostname.call(this, v, build);\n  };\n\n  // compound accessors\n  p.origin = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined) {\n      var protocol = this.protocol();\n      var authority = this.authority();\n      if (!authority) {\n        return '';\n      }\n\n      return (protocol ? protocol + '://' : '') + this.authority();\n    } else {\n      var origin = URI(v);\n      this\n        .protocol(origin.protocol())\n        .authority(origin.authority())\n        .build(!build);\n      return this;\n    }\n  };\n  p.host = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined) {\n      return this._parts.hostname ? URI.buildHost(this._parts) : '';\n    } else {\n      var res = URI.parseHost(v, this._parts);\n      if (res !== '/') {\n        throw new TypeError('Hostname \"' + v + '\" contains characters other than [A-Z0-9.-]');\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n  p.authority = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined) {\n      return this._parts.hostname ? URI.buildAuthority(this._parts) : '';\n    } else {\n      var res = URI.parseAuthority(v, this._parts);\n      if (res !== '/') {\n        throw new TypeError('Hostname \"' + v + '\" contains characters other than [A-Z0-9.-]');\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n  p.userinfo = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined) {\n      var t = URI.buildUserinfo(this._parts);\n      return t ? t.substring(0, t.length -1) : t;\n    } else {\n      if (v[v.length-1] !== '@') {\n        v += '@';\n      }\n\n      URI.parseUserinfo(v, this._parts);\n      this.build(!build);\n      return this;\n    }\n  };\n  p.resource = function(v, build) {\n    var parts;\n\n    if (v === undefined) {\n      return this.path() + this.search() + this.hash();\n    }\n\n    parts = URI.parse(v);\n    this._parts.path = parts.path;\n    this._parts.query = parts.query;\n    this._parts.fragment = parts.fragment;\n    this.build(!build);\n    return this;\n  };\n\n  // fraction accessors\n  p.subdomain = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    // convenience, return \"www\" from \"www.example.org\"\n    if (v === undefined) {\n      if (!this._parts.hostname || this.is('IP')) {\n        return '';\n      }\n\n      // grab domain and add another segment\n      var end = this._parts.hostname.length - this.domain().length - 1;\n      return this._parts.hostname.substring(0, end) || '';\n    } else {\n      var e = this._parts.hostname.length - this.domain().length;\n      var sub = this._parts.hostname.substring(0, e);\n      var replace = new RegExp('^' + escapeRegEx(sub));\n\n      if (v && v.charAt(v.length - 1) !== '.') {\n        v += '.';\n      }\n\n      if (v.indexOf(':') !== -1) {\n        throw new TypeError('Domains cannot contain colons');\n      }\n\n      if (v) {\n        URI.ensureValidHostname(v, this._parts.protocol);\n      }\n\n      this._parts.hostname = this._parts.hostname.replace(replace, v);\n      this.build(!build);\n      return this;\n    }\n  };\n  p.domain = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (typeof v === 'boolean') {\n      build = v;\n      v = undefined;\n    }\n\n    // convenience, return \"example.org\" from \"www.example.org\"\n    if (v === undefined) {\n      if (!this._parts.hostname || this.is('IP')) {\n        return '';\n      }\n\n      // if hostname consists of 1 or 2 segments, it must be the domain\n      var t = this._parts.hostname.match(/\\./g);\n      if (t && t.length < 2) {\n        return this._parts.hostname;\n      }\n\n      // grab tld and add another segment\n      var end = this._parts.hostname.length - this.tld(build).length - 1;\n      end = this._parts.hostname.lastIndexOf('.', end -1) + 1;\n      return this._parts.hostname.substring(end) || '';\n    } else {\n      if (!v) {\n        throw new TypeError('cannot set domain empty');\n      }\n\n      if (v.indexOf(':') !== -1) {\n        throw new TypeError('Domains cannot contain colons');\n      }\n\n      URI.ensureValidHostname(v, this._parts.protocol);\n\n      if (!this._parts.hostname || this.is('IP')) {\n        this._parts.hostname = v;\n      } else {\n        var replace = new RegExp(escapeRegEx(this.domain()) + '$');\n        this._parts.hostname = this._parts.hostname.replace(replace, v);\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n  p.tld = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (typeof v === 'boolean') {\n      build = v;\n      v = undefined;\n    }\n\n    // return \"org\" from \"www.example.org\"\n    if (v === undefined) {\n      if (!this._parts.hostname || this.is('IP')) {\n        return '';\n      }\n\n      var pos = this._parts.hostname.lastIndexOf('.');\n      var tld = this._parts.hostname.substring(pos + 1);\n\n      if (build !== true && SLD && SLD.list[tld.toLowerCase()]) {\n        return SLD.get(this._parts.hostname) || tld;\n      }\n\n      return tld;\n    } else {\n      var replace;\n\n      if (!v) {\n        throw new TypeError('cannot set TLD empty');\n      } else if (v.match(/[^a-zA-Z0-9-]/)) {\n        if (SLD && SLD.is(v)) {\n          replace = new RegExp(escapeRegEx(this.tld()) + '$');\n          this._parts.hostname = this._parts.hostname.replace(replace, v);\n        } else {\n          throw new TypeError('TLD \"' + v + '\" contains characters other than [A-Z0-9]');\n        }\n      } else if (!this._parts.hostname || this.is('IP')) {\n        throw new ReferenceError('cannot set TLD on non-domain host');\n      } else {\n        replace = new RegExp(escapeRegEx(this.tld()) + '$');\n        this._parts.hostname = this._parts.hostname.replace(replace, v);\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n  p.directory = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined || v === true) {\n      if (!this._parts.path && !this._parts.hostname) {\n        return '';\n      }\n\n      if (this._parts.path === '/') {\n        return '/';\n      }\n\n      var end = this._parts.path.length - this.filename().length - 1;\n      var res = this._parts.path.substring(0, end) || (this._parts.hostname ? '/' : '');\n\n      return v ? URI.decodePath(res) : res;\n\n    } else {\n      var e = this._parts.path.length - this.filename().length;\n      var directory = this._parts.path.substring(0, e);\n      var replace = new RegExp('^' + escapeRegEx(directory));\n\n      // fully qualifier directories begin with a slash\n      if (!this.is('relative')) {\n        if (!v) {\n          v = '/';\n        }\n\n        if (v.charAt(0) !== '/') {\n          v = '/' + v;\n        }\n      }\n\n      // directories always end with a slash\n      if (v && v.charAt(v.length - 1) !== '/') {\n        v += '/';\n      }\n\n      v = URI.recodePath(v);\n      this._parts.path = this._parts.path.replace(replace, v);\n      this.build(!build);\n      return this;\n    }\n  };\n  p.filename = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (typeof v !== 'string') {\n      if (!this._parts.path || this._parts.path === '/') {\n        return '';\n      }\n\n      var pos = this._parts.path.lastIndexOf('/');\n      var res = this._parts.path.substring(pos+1);\n\n      return v ? URI.decodePathSegment(res) : res;\n    } else {\n      var mutatedDirectory = false;\n\n      if (v.charAt(0) === '/') {\n        v = v.substring(1);\n      }\n\n      if (v.match(/\\.?\\//)) {\n        mutatedDirectory = true;\n      }\n\n      var replace = new RegExp(escapeRegEx(this.filename()) + '$');\n      v = URI.recodePath(v);\n      this._parts.path = this._parts.path.replace(replace, v);\n\n      if (mutatedDirectory) {\n        this.normalizePath(build);\n      } else {\n        this.build(!build);\n      }\n\n      return this;\n    }\n  };\n  p.suffix = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined || v === true) {\n      if (!this._parts.path || this._parts.path === '/') {\n        return '';\n      }\n\n      var filename = this.filename();\n      var pos = filename.lastIndexOf('.');\n      var s, res;\n\n      if (pos === -1) {\n        return '';\n      }\n\n      // suffix may only contain alnum characters (yup, I made this up.)\n      s = filename.substring(pos+1);\n      res = (/^[a-z0-9%]+$/i).test(s) ? s : '';\n      return v ? URI.decodePathSegment(res) : res;\n    } else {\n      if (v.charAt(0) === '.') {\n        v = v.substring(1);\n      }\n\n      var suffix = this.suffix();\n      var replace;\n\n      if (!suffix) {\n        if (!v) {\n          return this;\n        }\n\n        this._parts.path += '.' + URI.recodePath(v);\n      } else if (!v) {\n        replace = new RegExp(escapeRegEx('.' + suffix) + '$');\n      } else {\n        replace = new RegExp(escapeRegEx(suffix) + '$');\n      }\n\n      if (replace) {\n        v = URI.recodePath(v);\n        this._parts.path = this._parts.path.replace(replace, v);\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n  p.segment = function(segment, v, build) {\n    var separator = this._parts.urn ? ':' : '/';\n    var path = this.path();\n    var absolute = path.substring(0, 1) === '/';\n    var segments = path.split(separator);\n\n    if (segment !== undefined && typeof segment !== 'number') {\n      build = v;\n      v = segment;\n      segment = undefined;\n    }\n\n    if (segment !== undefined && typeof segment !== 'number') {\n      throw new Error('Bad segment \"' + segment + '\", must be 0-based integer');\n    }\n\n    if (absolute) {\n      segments.shift();\n    }\n\n    if (segment < 0) {\n      // allow negative indexes to address from the end\n      segment = Math.max(segments.length + segment, 0);\n    }\n\n    if (v === undefined) {\n      /*jshint laxbreak: true */\n      return segment === undefined\n        ? segments\n        : segments[segment];\n      /*jshint laxbreak: false */\n    } else if (segment === null || segments[segment] === undefined) {\n      if (isArray(v)) {\n        segments = [];\n        // collapse empty elements within array\n        for (var i=0, l=v.length; i < l; i++) {\n          if (!v[i].length && (!segments.length || !segments[segments.length -1].length)) {\n            continue;\n          }\n\n          if (segments.length && !segments[segments.length -1].length) {\n            segments.pop();\n          }\n\n          segments.push(trimSlashes(v[i]));\n        }\n      } else if (v || typeof v === 'string') {\n        v = trimSlashes(v);\n        if (segments[segments.length -1] === '') {\n          // empty trailing elements have to be overwritten\n          // to prevent results such as /foo//bar\n          segments[segments.length -1] = v;\n        } else {\n          segments.push(v);\n        }\n      }\n    } else {\n      if (v) {\n        segments[segment] = trimSlashes(v);\n      } else {\n        segments.splice(segment, 1);\n      }\n    }\n\n    if (absolute) {\n      segments.unshift('');\n    }\n\n    return this.path(segments.join(separator), build);\n  };\n  p.segmentCoded = function(segment, v, build) {\n    var segments, i, l;\n\n    if (typeof segment !== 'number') {\n      build = v;\n      v = segment;\n      segment = undefined;\n    }\n\n    if (v === undefined) {\n      segments = this.segment(segment, v, build);\n      if (!isArray(segments)) {\n        segments = segments !== undefined ? URI.decode(segments) : undefined;\n      } else {\n        for (i = 0, l = segments.length; i < l; i++) {\n          segments[i] = URI.decode(segments[i]);\n        }\n      }\n\n      return segments;\n    }\n\n    if (!isArray(v)) {\n      v = (typeof v === 'string' || v instanceof String) ? URI.encode(v) : v;\n    } else {\n      for (i = 0, l = v.length; i < l; i++) {\n        v[i] = URI.encode(v[i]);\n      }\n    }\n\n    return this.segment(segment, v, build);\n  };\n\n  // mutating query string\n  var q = p.query;\n  p.query = function(v, build) {\n    if (v === true) {\n      return URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n    } else if (typeof v === 'function') {\n      var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n      var result = v.call(this, data);\n      this._parts.query = URI.buildQuery(result || data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);\n      this.build(!build);\n      return this;\n    } else if (v !== undefined && typeof v !== 'string') {\n      this._parts.query = URI.buildQuery(v, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);\n      this.build(!build);\n      return this;\n    } else {\n      return q.call(this, v, build);\n    }\n  };\n  p.setQuery = function(name, value, build) {\n    var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n\n    if (typeof name === 'string' || name instanceof String) {\n      data[name] = value !== undefined ? value : null;\n    } else if (typeof name === 'object') {\n      for (var key in name) {\n        if (hasOwn.call(name, key)) {\n          data[key] = name[key];\n        }\n      }\n    } else {\n      throw new TypeError('URI.addQuery() accepts an object, string as the name parameter');\n    }\n\n    this._parts.query = URI.buildQuery(data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);\n    if (typeof name !== 'string') {\n      build = value;\n    }\n\n    this.build(!build);\n    return this;\n  };\n  p.addQuery = function(name, value, build) {\n    var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n    URI.addQuery(data, name, value === undefined ? null : value);\n    this._parts.query = URI.buildQuery(data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);\n    if (typeof name !== 'string') {\n      build = value;\n    }\n\n    this.build(!build);\n    return this;\n  };\n  p.removeQuery = function(name, value, build) {\n    var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n    URI.removeQuery(data, name, value);\n    this._parts.query = URI.buildQuery(data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);\n    if (typeof name !== 'string') {\n      build = value;\n    }\n\n    this.build(!build);\n    return this;\n  };\n  p.hasQuery = function(name, value, withinArray) {\n    var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n    return URI.hasQuery(data, name, value, withinArray);\n  };\n  p.setSearch = p.setQuery;\n  p.addSearch = p.addQuery;\n  p.removeSearch = p.removeQuery;\n  p.hasSearch = p.hasQuery;\n\n  // sanitizing URLs\n  p.normalize = function() {\n    if (this._parts.urn) {\n      return this\n        .normalizeProtocol(false)\n        .normalizePath(false)\n        .normalizeQuery(false)\n        .normalizeFragment(false)\n        .build();\n    }\n\n    return this\n      .normalizeProtocol(false)\n      .normalizeHostname(false)\n      .normalizePort(false)\n      .normalizePath(false)\n      .normalizeQuery(false)\n      .normalizeFragment(false)\n      .build();\n  };\n  p.normalizeProtocol = function(build) {\n    if (typeof this._parts.protocol === 'string') {\n      this._parts.protocol = this._parts.protocol.toLowerCase();\n      this.build(!build);\n    }\n\n    return this;\n  };\n  p.normalizeHostname = function(build) {\n    if (this._parts.hostname) {\n      if (this.is('IDN') && punycode) {\n        this._parts.hostname = punycode.toASCII(this._parts.hostname);\n      } else if (this.is('IPv6') && IPv6) {\n        this._parts.hostname = IPv6.best(this._parts.hostname);\n      }\n\n      this._parts.hostname = this._parts.hostname.toLowerCase();\n      this.build(!build);\n    }\n\n    return this;\n  };\n  p.normalizePort = function(build) {\n    // remove port of it's the protocol's default\n    if (typeof this._parts.protocol === 'string' && this._parts.port === URI.defaultPorts[this._parts.protocol]) {\n      this._parts.port = null;\n      this.build(!build);\n    }\n\n    return this;\n  };\n  p.normalizePath = function(build) {\n    var _path = this._parts.path;\n    if (!_path) {\n      return this;\n    }\n\n    if (this._parts.urn) {\n      this._parts.path = URI.recodeUrnPath(this._parts.path);\n      this.build(!build);\n      return this;\n    }\n\n    if (this._parts.path === '/') {\n      return this;\n    }\n\n    _path = URI.recodePath(_path);\n\n    var _was_relative;\n    var _leadingParents = '';\n    var _parent, _pos;\n\n    // handle relative paths\n    if (_path.charAt(0) !== '/') {\n      _was_relative = true;\n      _path = '/' + _path;\n    }\n\n    // handle relative files (as opposed to directories)\n    if (_path.slice(-3) === '/..' || _path.slice(-2) === '/.') {\n      _path += '/';\n    }\n\n    // resolve simples\n    _path = _path\n      .replace(/(\\/(\\.\\/)+)|(\\/\\.$)/g, '/')\n      .replace(/\\/{2,}/g, '/');\n\n    // remember leading parents\n    if (_was_relative) {\n      _leadingParents = _path.substring(1).match(/^(\\.\\.\\/)+/) || '';\n      if (_leadingParents) {\n        _leadingParents = _leadingParents[0];\n      }\n    }\n\n    // resolve parents\n    while (true) {\n      _parent = _path.search(/\\/\\.\\.(\\/|$)/);\n      if (_parent === -1) {\n        // no more ../ to resolve\n        break;\n      } else if (_parent === 0) {\n        // top level cannot be relative, skip it\n        _path = _path.substring(3);\n        continue;\n      }\n\n      _pos = _path.substring(0, _parent).lastIndexOf('/');\n      if (_pos === -1) {\n        _pos = _parent;\n      }\n      _path = _path.substring(0, _pos) + _path.substring(_parent + 3);\n    }\n\n    // revert to relative\n    if (_was_relative && this.is('relative')) {\n      _path = _leadingParents + _path.substring(1);\n    }\n\n    this._parts.path = _path;\n    this.build(!build);\n    return this;\n  };\n  p.normalizePathname = p.normalizePath;\n  p.normalizeQuery = function(build) {\n    if (typeof this._parts.query === 'string') {\n      if (!this._parts.query.length) {\n        this._parts.query = null;\n      } else {\n        this.query(URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace));\n      }\n\n      this.build(!build);\n    }\n\n    return this;\n  };\n  p.normalizeFragment = function(build) {\n    if (!this._parts.fragment) {\n      this._parts.fragment = null;\n      this.build(!build);\n    }\n\n    return this;\n  };\n  p.normalizeSearch = p.normalizeQuery;\n  p.normalizeHash = p.normalizeFragment;\n\n  p.iso8859 = function() {\n    // expect unicode input, iso8859 output\n    var e = URI.encode;\n    var d = URI.decode;\n\n    URI.encode = escape;\n    URI.decode = decodeURIComponent;\n    try {\n      this.normalize();\n    } finally {\n      URI.encode = e;\n      URI.decode = d;\n    }\n    return this;\n  };\n\n  p.unicode = function() {\n    // expect iso8859 input, unicode output\n    var e = URI.encode;\n    var d = URI.decode;\n\n    URI.encode = strictEncodeURIComponent;\n    URI.decode = unescape;\n    try {\n      this.normalize();\n    } finally {\n      URI.encode = e;\n      URI.decode = d;\n    }\n    return this;\n  };\n\n  p.readable = function() {\n    var uri = this.clone();\n    // removing username, password, because they shouldn't be displayed according to RFC 3986\n    uri.username('').password('').normalize();\n    var t = '';\n    if (uri._parts.protocol) {\n      t += uri._parts.protocol + '://';\n    }\n\n    if (uri._parts.hostname) {\n      if (uri.is('punycode') && punycode) {\n        t += punycode.toUnicode(uri._parts.hostname);\n        if (uri._parts.port) {\n          t += ':' + uri._parts.port;\n        }\n      } else {\n        t += uri.host();\n      }\n    }\n\n    if (uri._parts.hostname && uri._parts.path && uri._parts.path.charAt(0) !== '/') {\n      t += '/';\n    }\n\n    t += uri.path(true);\n    if (uri._parts.query) {\n      var q = '';\n      for (var i = 0, qp = uri._parts.query.split('&'), l = qp.length; i < l; i++) {\n        var kv = (qp[i] || '').split('=');\n        q += '&' + URI.decodeQuery(kv[0], this._parts.escapeQuerySpace)\n          .replace(/&/g, '%26');\n\n        if (kv[1] !== undefined) {\n          q += '=' + URI.decodeQuery(kv[1], this._parts.escapeQuerySpace)\n            .replace(/&/g, '%26');\n        }\n      }\n      t += '?' + q.substring(1);\n    }\n\n    t += URI.decodeQuery(uri.hash(), true);\n    return t;\n  };\n\n  // resolving relative and absolute URLs\n  p.absoluteTo = function(base) {\n    var resolved = this.clone();\n    var properties = ['protocol', 'username', 'password', 'hostname', 'port'];\n    var basedir, i, p;\n\n    if (this._parts.urn) {\n      throw new Error('URNs do not have any generally defined hierarchical components');\n    }\n\n    if (!(base instanceof URI)) {\n      base = new URI(base);\n    }\n\n    if (resolved._parts.protocol) {\n      // Directly returns even if this._parts.hostname is empty.\n      return resolved;\n    } else {\n      resolved._parts.protocol = base._parts.protocol;\n    }\n\n    if (this._parts.hostname) {\n      return resolved;\n    }\n\n    for (i = 0; (p = properties[i]); i++) {\n      resolved._parts[p] = base._parts[p];\n    }\n\n    if (!resolved._parts.path) {\n      resolved._parts.path = base._parts.path;\n      if (!resolved._parts.query) {\n        resolved._parts.query = base._parts.query;\n      }\n    } else {\n      if (resolved._parts.path.substring(-2) === '..') {\n        resolved._parts.path += '/';\n      }\n\n      if (resolved.path().charAt(0) !== '/') {\n        basedir = base.directory();\n        basedir = basedir ? basedir : base.path().indexOf('/') === 0 ? '/' : '';\n        resolved._parts.path = (basedir ? (basedir + '/') : '') + resolved._parts.path;\n        resolved.normalizePath();\n      }\n    }\n\n    resolved.build();\n    return resolved;\n  };\n  p.relativeTo = function(base) {\n    var relative = this.clone().normalize();\n    var relativeParts, baseParts, common, relativePath, basePath;\n\n    if (relative._parts.urn) {\n      throw new Error('URNs do not have any generally defined hierarchical components');\n    }\n\n    base = new URI(base).normalize();\n    relativeParts = relative._parts;\n    baseParts = base._parts;\n    relativePath = relative.path();\n    basePath = base.path();\n\n    if (relativePath.charAt(0) !== '/') {\n      throw new Error('URI is already relative');\n    }\n\n    if (basePath.charAt(0) !== '/') {\n      throw new Error('Cannot calculate a URI relative to another relative URI');\n    }\n\n    if (relativeParts.protocol === baseParts.protocol) {\n      relativeParts.protocol = null;\n    }\n\n    if (relativeParts.username !== baseParts.username || relativeParts.password !== baseParts.password) {\n      return relative.build();\n    }\n\n    if (relativeParts.protocol !== null || relativeParts.username !== null || relativeParts.password !== null) {\n      return relative.build();\n    }\n\n    if (relativeParts.hostname === baseParts.hostname && relativeParts.port === baseParts.port) {\n      relativeParts.hostname = null;\n      relativeParts.port = null;\n    } else {\n      return relative.build();\n    }\n\n    if (relativePath === basePath) {\n      relativeParts.path = '';\n      return relative.build();\n    }\n\n    // determine common sub path\n    common = URI.commonPath(relativePath, basePath);\n\n    // If the paths have nothing in common, return a relative URL with the absolute path.\n    if (!common) {\n      return relative.build();\n    }\n\n    var parents = baseParts.path\n      .substring(common.length)\n      .replace(/[^\\/]*$/, '')\n      .replace(/.*?\\//g, '../');\n\n    relativeParts.path = (parents + relativeParts.path.substring(common.length)) || './';\n\n    return relative.build();\n  };\n\n  // comparing URIs\n  p.equals = function(uri) {\n    var one = this.clone();\n    var two = new URI(uri);\n    var one_map = {};\n    var two_map = {};\n    var checked = {};\n    var one_query, two_query, key;\n\n    one.normalize();\n    two.normalize();\n\n    // exact match\n    if (one.toString() === two.toString()) {\n      return true;\n    }\n\n    // extract query string\n    one_query = one.query();\n    two_query = two.query();\n    one.query('');\n    two.query('');\n\n    // definitely not equal if not even non-query parts match\n    if (one.toString() !== two.toString()) {\n      return false;\n    }\n\n    // query parameters have the same length, even if they're permuted\n    if (one_query.length !== two_query.length) {\n      return false;\n    }\n\n    one_map = URI.parseQuery(one_query, this._parts.escapeQuerySpace);\n    two_map = URI.parseQuery(two_query, this._parts.escapeQuerySpace);\n\n    for (key in one_map) {\n      if (hasOwn.call(one_map, key)) {\n        if (!isArray(one_map[key])) {\n          if (one_map[key] !== two_map[key]) {\n            return false;\n          }\n        } else if (!arraysEqual(one_map[key], two_map[key])) {\n          return false;\n        }\n\n        checked[key] = true;\n      }\n    }\n\n    for (key in two_map) {\n      if (hasOwn.call(two_map, key)) {\n        if (!checked[key]) {\n          // two contains a parameter not present in one\n          return false;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  // state\n  p.preventInvalidHostname = function(v) {\n    this._parts.preventInvalidHostname = !!v;\n    return this;\n  };\n\n  p.duplicateQueryParameters = function(v) {\n    this._parts.duplicateQueryParameters = !!v;\n    return this;\n  };\n\n  p.escapeQuerySpace = function(v) {\n    this._parts.escapeQuerySpace = !!v;\n    return this;\n  };\n\n  return URI;\n}));\n"]},"metadata":{},"sourceType":"script"}