{"ast":null,"code":"var _jsxFileName = \"/home/waleed/Desktop/MintWebsites/Mint-Nfts-dapp/src/pages/HomePage/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"../../redux/blockchain/blockchainActions\";\nimport { connectWallet } from \"../../redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./../../redux/data/dataActions\";\nimport { StyledRoundButton } from \"./../../components/styles/styledRoundButton.styled\";\nimport * as s from \"./../../styles/globalStyles\";\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport HeroSection from \"../../components/HeroSection/HeroSection\";\nimport Social from \"../../components/SocialMedia/Social\";\nimport Video from \"../../components/Video/Video\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst {\n  createAlchemyWeb3,\n  ethers\n} = require(\"@alch/alchemy-web3\");\n\nvar Web3 = require('web3');\n\nvar Contract = require('web3-eth-contract');\n\nfunction Home() {\n  _s();\n\n  let cost = 0;\n  const dispatch = useDispatch();\n  const blockchain = useSelector(state => state.blockchain);\n  const data = useSelector(state => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [mintDone, setMintDone] = useState(false);\n  const [supply, setTotalSupply] = useState(0);\n  const [feedback, setFeedback] = useState(\"\");\n  const [mintAmount, setMintAmount] = useState(2);\n  const [displayCost, setDisplayCost] = useState(cost);\n  const [state, setState] = useState(-1);\n  const [canMintWL, setCanMintWL] = useState(false);\n  const [disable, setDisable] = useState(false);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false\n  });\n\n  const claimNFTs = () => {\n    let cost = 0;\n\n    if (state == 1) {\n      cost = CONFIG.WEI_COST_WL;\n    } else {\n      cost = CONFIG.WEI_COST_PU;\n    }\n\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}`);\n    setClaimingNft(true);\n    setDisable(true);\n    blockchain.smartContract.methods.mint(mintAmount).send({\n      gasLimit: String(totalGasLimit),\n      to: CONFIG.CONTRACT_ADDRESS,\n      from: blockchain.account,\n      value: totalCostWei\n    }).once(\"error\", err => {\n      console.log(err);\n      setFeedback(\"Sorry, something went wrong please try again later.\");\n      setClaimingNft(false);\n    }).then(receipt => {\n      setMintDone(true);\n      setFeedback(`Complete , Welcome to the Twisted Family!`);\n      setClaimingNft(false);\n      blockchain.smartContract.methods.totalSupply().call().then(res => {\n        setTotalSupply(res);\n      });\n      dispatch(fetchData(blockchain.account));\n    });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 2;\n\n    if (newMintAmount < 2) {\n      newMintAmount = 2;\n    }\n\n    setMintAmount(newMintAmount);\n\n    if (state == 0 || state == -1) {\n      setDisplayCost(0.00);\n    } else if (state == 1) {\n      setDisplayCost(parseFloat(CONFIG.DISPLAY_COST_WL * newMintAmount).toFixed(3));\n    } else {\n      setDisplayCost(parseFloat(CONFIG.DISPLAY_COST_PU * newMintAmount).toFixed(3));\n    }\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 2;\n    console.log(newMintAmount);\n\n    if (newMintAmount > 8) {\n      newMintAmount = 8;\n    }\n\n    setMintAmount(newMintAmount);\n\n    if (state == 0 || state == -1) {\n      setDisplayCost(0.00);\n    } else if (state == 1) {\n      setDisplayCost(parseFloat(CONFIG.DISPLAY_COST_WL * newMintAmount).toFixed(3));\n    } else {\n      setDisplayCost(parseFloat(CONFIG.DISPLAY_COST_PU * newMintAmount).toFixed(3));\n    }\n  };\n\n  const maxNfts = () => {\n    if (state == 0 || state == -1) {\n      setDisplayCost(0.00);\n    } else if (state == 1) {\n      setMintAmount(CONFIG.MAX_LIMIT);\n      setDisplayCost(parseFloat(CONFIG.DISPLAY_COST_WL * CONFIG.MAX_LIMIT).toFixed(3));\n    } else {\n      setMintAmount(CONFIG.MAX_LIMIT);\n      setDisplayCost(parseFloat(CONFIG.DISPLAY_COST_PU * 8).toFixed(3));\n    }\n  };\n\n  const getDataWithoutWallet = async () => {\n    const web3 = createAlchemyWeb3(\"https://eth-mainnet.alchemyapi.io/v2/EDLW4rQqMI3LEJUWifxT04jTycowEQNU\");\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    });\n    const abi = await abiResponse.json();\n    var contract = new Contract(abi, '0xB1B75818b813af1Ad69e8827533aE3bFFC81f137');\n    contract.setProvider(web3.currentProvider);\n    console.log(contract);\n    const totalSupply = await contract.methods.totalSupply().call();\n    setTotalSupply(totalSupply);\n  };\n\n  const getData = async () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n      let currentState = await blockchain.smartContract.methods.currentState().call();\n      console.log({\n        currentState\n      });\n      setState(currentState);\n\n      if (currentState == 0) {\n        setDisplayCost(0.00);\n        setDisable(true);\n        setFeedback(\"Minting is not live yet!\");\n      } else if (currentState == 1) {\n        let mintWL = await blockchain.smartContract.methods.isWhitelisted(blockchain.account).call();\n        console.log({\n          mintWL\n        });\n        setCanMintWL(mintWL);\n        mintWL ? setFeedback(\"You are on the Whitelist!\") : setFeedback(`This wallet is not on the Whitelist`);\n        mintWL ? setDisable(false) : setDisable(true);\n        setDisplayCost(CONFIG.DISPLAY_COST_WL);\n      } else {\n        setDisplayCost(CONFIG.DISPLAY_COST_PU);\n      }\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n    getDataWithoutWallet();\n  }, []);\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(s.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Video, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.FlexContainer, {\n        jc: \"space-evenly\",\n        ai: \"center\",\n        fd: \"column\",\n        mt: \"25vh\",\n        children: [/*#__PURE__*/_jsxDEV(s.Image, {\n          wid: \"25\",\n          src: \"config/images/soldout.jpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(s.SpacerLarge, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(s.TextTitle, {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://opensea.io/collection/twisted-bears\",\n            target: \"_blank\",\n            children: \"Click Here to Visit Opensea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.SpacerLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Home, \"pCKqbzqWz3XIT2lJ0uBdHZRSI/s=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/waleed/Desktop/MintWebsites/Mint-Nfts-dapp/src/pages/HomePage/Home.js"],"names":["React","useEffect","useState","useRef","useDispatch","useSelector","connect","connectWallet","fetchData","StyledRoundButton","s","Navbar","HeroSection","Social","Video","axios","createAlchemyWeb3","ethers","require","Web3","Contract","Home","cost","dispatch","blockchain","state","data","claimingNft","setClaimingNft","mintDone","setMintDone","supply","setTotalSupply","feedback","setFeedback","mintAmount","setMintAmount","displayCost","setDisplayCost","setState","canMintWL","setCanMintWL","disable","setDisable","CONFIG","SET_CONFIG","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","claimNFTs","WEI_COST_WL","WEI_COST_PU","gasLimit","totalCostWei","String","totalGasLimit","smartContract","methods","mint","send","to","from","account","value","once","err","console","log","then","receipt","totalSupply","call","res","decrementMintAmount","newMintAmount","parseFloat","DISPLAY_COST_WL","toFixed","DISPLAY_COST_PU","incrementMintAmount","maxNfts","MAX_LIMIT","getDataWithoutWallet","web3","abiResponse","fetch","headers","Accept","abi","json","contract","setProvider","currentProvider","getData","currentState","mintWL","isWhitelisted","getConfig","configResponse","config"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"../../redux/blockchain/blockchainActions\";\nimport { connectWallet } from \"../../redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./../../redux/data/dataActions\";\nimport { StyledRoundButton } from \"./../../components/styles/styledRoundButton.styled\";\nimport * as s from \"./../../styles/globalStyles\";\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport HeroSection from \"../../components/HeroSection/HeroSection\";\nimport Social from \"../../components/SocialMedia/Social\";\nimport Video from \"../../components/Video/Video\";\nimport axios from 'axios';\n\nconst { createAlchemyWeb3, ethers } = require(\"@alch/alchemy-web3\");\nvar Web3 = require('web3');\nvar Contract = require('web3-eth-contract');\n\nfunction Home() {\n  let cost = 0;\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [mintDone, setMintDone] = useState(false);\n  const [supply, setTotalSupply] = useState(0);\n  const [feedback, setFeedback] = useState(\"\");\n  const [mintAmount, setMintAmount] = useState(2);\n  const [displayCost, setDisplayCost] = useState(cost);\n  const [state, setState] = useState(-1);\n  const [canMintWL, setCanMintWL] = useState(false);\n  const [disable, setDisable] = useState(false);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = 0;\n    if (state == 1) {\n      cost = CONFIG.WEI_COST_WL;\n    } else {\n      cost = CONFIG.WEI_COST_PU;\n    }\n\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}`);\n    setClaimingNft(true);\n    setDisable(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        setMintDone(true);\n        setFeedback(`Complete , Welcome to the Twisted Family!`);\n        setClaimingNft(false);\n        blockchain.smartContract.methods\n          .totalSupply()\n          .call()\n          .then((res) => {\n            setTotalSupply(res);\n          });\n\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 2;\n    if (newMintAmount < 2) {\n      newMintAmount = 2;\n    }\n    setMintAmount(newMintAmount);\n    if(state == 0 || state == -1 ){\n      setDisplayCost(0.00);\n    }\n    else if (state == 1) {\n      setDisplayCost(\n        parseFloat(CONFIG.DISPLAY_COST_WL * newMintAmount).toFixed(3)\n      );\n    } else {\n      setDisplayCost(parseFloat(CONFIG.DISPLAY_COST_PU * newMintAmount).toFixed(3));\n    }\n\n    \n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 2;\n    console.log(newMintAmount);\n    if (newMintAmount > 8) {\n      newMintAmount = 8;\n    }\n    setMintAmount(newMintAmount);\n    if(state == 0 || state == -1 ){\n      setDisplayCost(0.00);\n    }\n    else if (state == 1) {\n      setDisplayCost(\n        parseFloat(CONFIG.DISPLAY_COST_WL * newMintAmount).toFixed(3)\n      );\n    } else {\n      setDisplayCost(parseFloat(CONFIG.DISPLAY_COST_PU * newMintAmount).toFixed(3));\n    }\n  };\n\n  const maxNfts = () => {\n    if(state == 0 || state == -1 ){\n      setDisplayCost(0.00);\n    }\n    else if (state == 1) {\n      setMintAmount(CONFIG.MAX_LIMIT);\n      setDisplayCost(\n        parseFloat(CONFIG.DISPLAY_COST_WL * CONFIG.MAX_LIMIT).toFixed(3)\n      );\n    } else {\n      setMintAmount(CONFIG.MAX_LIMIT);\n      setDisplayCost(parseFloat(CONFIG.DISPLAY_COST_PU * 8).toFixed(3));\n    }\n  };\n\n\n\n  const getDataWithoutWallet = async () => {\n    const web3 = createAlchemyWeb3(\"https://eth-mainnet.alchemyapi.io/v2/EDLW4rQqMI3LEJUWifxT04jTycowEQNU\");\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    var contract = new Contract(abi, '0xB1B75818b813af1Ad69e8827533aE3bFFC81f137');\n    contract.setProvider(web3.currentProvider);\n    console.log(contract);\n    const totalSupply = await contract.methods\n      .totalSupply()\n      .call();\n    setTotalSupply(totalSupply);\n\n  }\n\n  const getData = async () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n      let currentState = await blockchain.smartContract.methods\n        .currentState()\n        .call();\n      console.log({ currentState });\n      setState(currentState);\n\n      if (currentState == 0) {\n        setDisplayCost(0.00);\n        setDisable(true);\n        setFeedback(\"Minting is not live yet!\")\n      } else if (currentState == 1) {\n        let mintWL = await blockchain.smartContract.methods\n          .isWhitelisted(blockchain.account)\n          .call();\n        console.log({ mintWL });\n        setCanMintWL(mintWL);\n        (mintWL) ? setFeedback(\"You are on the Whitelist!\") : setFeedback(`This wallet is not on the Whitelist`);\n        (mintWL) ? setDisable(false) : setDisable(true);\n\n        setDisplayCost(CONFIG.DISPLAY_COST_WL);\n      } else {\n        setDisplayCost(CONFIG.DISPLAY_COST_PU);\n      }\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n    getDataWithoutWallet();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <>\n\n      <s.Body>\n        <Video />\n        <Navbar />\n        <s.FlexContainer\n          jc={\"space-evenly\"}\n          ai={\"center\"}\n          fd={\"column\"}\n          mt={\"25vh\"}\n        >\n         <s.Image wid={\"25\"} src={\"config/images/soldout.jpeg\"} />\n         <s.SpacerLarge />\n         <s.TextTitle><a href=\"https://opensea.io/collection/twisted-bears\" target=\"_blank\">Click Here to Visit Opensea</a></s.TextTitle>\n        </s.FlexContainer>\n        <s.SpacerLarge />\n        {/* <s.TextTitle size={3} color={\"white\"}>\n          MINTING 3RD APRIL 2022\n          <br />\n          10AM EST\n        </s.TextTitle> */}\n      </s.Body>\n\n    </>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}